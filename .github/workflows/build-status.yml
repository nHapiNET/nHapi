name: Build Status
on:
  push:
    branches:
      - master

jobs:
  build-and-test-windows:
    name: Build And Test
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.101

    - name: Restore nHapi
      run: |
        dotnet restore nHapi.sln --configfile build\.nuget\NuGet.config

    - name: Build nHapi
      run: |
        dotnet build nHapi.sln -c Release --no-restore

    - name: Run tests for all target frameworks
      run: |
         dotnet test tests\NHapi.Base.NUnit\NHapi.Base.NUnit.csproj -r TestResults -c Release -f net461 --no-restore --no-build
         dotnet test tests\NHapi.Base.NUnit\NHapi.Base.NUnit.csproj -r TestResults -c Release -f net6.0--no-restore --no-build
         dotnet test tests\NHapi.NUnit.SourceGeneration\NHapi.NUnit.SourceGeneration.csproj -r TestResults -c Release -f net6.0 --no-restore --no-build
         dotnet test tests\NHapi.NUnit\NHapi.NUnit.csproj -r TestResults -c Release -f net461 --no-restore --no-build
         dotnet test tests\NHapi.NUnit\NHapi.NUnit.csproj -r TestResults -c Release -f net6.0  --no-restore --no-build

  build-and-test-linux:
    name: Build And Test Linux
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.101

    - name: Restore nHapi
      run: |
        dotnet restore nHapi.sln --configfile build/.nuget/NuGet.config

    - name: Build nHapi
      run: |
        dotnet build nHapi.sln -c Release --no-restore

    - name: Run tests for all target frameworks
      run: |
         dotnet test tests/NHapi.Base.NUnit/NHapi.Base.NUnit.csproj --collect:"XPlat Code Coverage" -r TestResults -c Release -f net6.0 --no-restore --no-build
         dotnet test tests/NHapi.NUnit.SourceGeneration/NHapi.NUnit.SourceGeneration.csproj --collect:"XPlat Code Coverage" -r TestResults -c Release -f net6.0 --no-restore --no-build
         dotnet test tests/NHapi.NUnit/NHapi.NUnit.csproj --collect:"XPlat Code Coverage" -r TestResults -c Release -f net6.0 --no-restore --no-build

    - name: Upload Code Coverage Report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: coverage-reports
        path: |
          TestResults/

  publish-coverage-results:
    needs: build-and-test-linux
    name: Publish Code Coverage Results
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: always()
    steps:
      - uses: actions/checkout@v2

      - name: 'Download artifact'
        uses: actions/download-artifact@v2
        with:
          name: coverage-reports

      - name: Set Coverage Report Paths
        id: coverage-paths
        run: |
          readarray -d '' coveragePathArray < <(find . -name "coverage.cobertura.xml" -print0)
          coveragePaths=$(printf ",%s" "${coveragePathArray[@]}")
          echo "::set-output name=COVERAGE_REPORT_PATHS::$coveragePaths"

      - name: Publish Code Coverage Results
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ${{ steps.coverage-paths.outputs.COVERAGE_REPORT_PATHS }}
