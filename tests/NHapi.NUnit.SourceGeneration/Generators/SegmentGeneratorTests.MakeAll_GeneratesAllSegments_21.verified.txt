{
  basepath\\NHapi.Model.V21\\Segment\\ACC.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 ACC message segment. 
/// This segment has the following fields:<ol>
///<li>ACC-1: ACCIDENT DATE/TIME (TS)</li>
///<li>ACC-2: ACCIDENT CODE (ID)</li>
///<li>ACC-3: ACCIDENT LOCATION (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class ACC : AbstractSegment  {

  /**
   * Creates a ACC (ACCIDENT) segment object that belongs to the given 
   * message.  
   */
	public ACC(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "ACCIDENT DATE/TIME");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 50}, "ACCIDENT CODE");
       this.add(typeof(ST), false, 1, 25, new System.Object[]{message}, "ACCIDENT LOCATION");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ACCIDENT DATE/TIME(ACC-1).
	///</summary>
	public TS ACCIDENTDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ACCIDENT CODE(ACC-2).
	///</summary>
	public ID ACCIDENTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ACCIDENT LOCATION(ACC-3).
	///</summary>
	public ST ACCIDENTLOCATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\ADD.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 ADD message segment. 
/// This segment has the following fields:<ol>
///<li>ADD-1: ADDENDUM CONTINUATION POINTER (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class ADD : AbstractSegment  {

  /**
   * Creates a ADD (ADDENDUM) segment object that belongs to the given 
   * message.  
   */
	public ADD(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "ADDENDUM CONTINUATION POINTER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ADDENDUM CONTINUATION POINTER(ADD-1).
	///</summary>
	public ST ADDENDUMCONTINUATIONPOINTER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\BHS.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 BHS message segment. 
/// This segment has the following fields:<ol>
///<li>BHS-1: BATCH FIELD SEPARATOR (ST)</li>
///<li>BHS-2: BATCH ENCODING CHARACTERS (ST)</li>
///<li>BHS-3: BATCH SENDING APPLICATION (ST)</li>
///<li>BHS-4: BATCH SENDING FACILITY (ST)</li>
///<li>BHS-5: BATCH RECEIVING APPLICATION (ST)</li>
///<li>BHS-6: BATCH RECEIVING FACILITY (ST)</li>
///<li>BHS-7: BATCH CREATION DATE/TIME (TS)</li>
///<li>BHS-8: BATCH SECURITY (ST)</li>
///<li>BHS-9: BATCH NAME/ID/TYPE (ST)</li>
///<li>BHS-10: BATCH COMMENT (ST)</li>
///<li>BHS-11: BATCH CONTROL ID (ST)</li>
///<li>BHS-12: REFERENCE BATCH CONTROL ID (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class BHS : AbstractSegment  {

  /**
   * Creates a BHS (BATCH HEADER) segment object that belongs to the given 
   * message.  
   */
	public BHS(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 1, 1, new System.Object[]{message}, "BATCH FIELD SEPARATOR");
       this.add(typeof(ST), true, 1, 3, new System.Object[]{message}, "BATCH ENCODING CHARACTERS");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "BATCH SENDING APPLICATION");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "BATCH SENDING FACILITY");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "BATCH RECEIVING APPLICATION");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "BATCH RECEIVING FACILITY");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "BATCH CREATION DATE/TIME");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "BATCH SECURITY");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "BATCH NAME/ID/TYPE");
       this.add(typeof(ST), false, 1, 80, new System.Object[]{message}, "BATCH COMMENT");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "BATCH CONTROL ID");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "REFERENCE BATCH CONTROL ID");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns BATCH FIELD SEPARATOR(BHS-1).
	///</summary>
	public ST BATCHFIELDSEPARATOR
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH ENCODING CHARACTERS(BHS-2).
	///</summary>
	public ST BATCHENCODINGCHARACTERS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH SENDING APPLICATION(BHS-3).
	///</summary>
	public ST BATCHSENDINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH SENDING FACILITY(BHS-4).
	///</summary>
	public ST BATCHSENDINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH RECEIVING APPLICATION(BHS-5).
	///</summary>
	public ST BATCHRECEIVINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH RECEIVING FACILITY(BHS-6).
	///</summary>
	public ST BATCHRECEIVINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH CREATION DATE/TIME(BHS-7).
	///</summary>
	public TS BATCHCREATIONDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH SECURITY(BHS-8).
	///</summary>
	public ST BATCHSECURITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH NAME/ID/TYPE(BHS-9).
	///</summary>
	public ST BATCHNAMEIDTYPE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH COMMENT(BHS-10).
	///</summary>
	public ST BATCHCOMMENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH CONTROL ID(BHS-11).
	///</summary>
	public ST BATCHCONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REFERENCE BATCH CONTROL ID(BHS-12).
	///</summary>
	public ST REFERENCEBATCHCONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\BLG.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 BLG message segment. 
/// This segment has the following fields:<ol>
///<li>BLG-1: WHEN TO CHARGE (CM)</li>
///<li>BLG-2: CHARGE TYPE (ID)</li>
///<li>BLG-3: ACCOUNT ID (CM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class BLG : AbstractSegment  {

  /**
   * Creates a BLG (BILLING) segment object that belongs to the given 
   * message.  
   */
	public BLG(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(CM), false, 1, 15, new System.Object[]{message}, "WHEN TO CHARGE");
       this.add(typeof(ID), false, 1, 50, new System.Object[]{message, 122}, "CHARGE TYPE");
       this.add(typeof(CM), false, 1, 100, new System.Object[]{message}, "ACCOUNT ID");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns WHEN TO CHARGE(BLG-1).
	///</summary>
	public CM WHENTOCHARGE
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CHARGE TYPE(BLG-2).
	///</summary>
	public ID CHARGETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ACCOUNT ID(BLG-3).
	///</summary>
	public CM ACCOUNTID
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\BTS.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 BTS message segment. 
/// This segment has the following fields:<ol>
///<li>BTS-1: BATCH MESSAGE COUNT (ST)</li>
///<li>BTS-2: BATCH COMMENT (ST)</li>
///<li>BTS-3: BATCH TOTALS (CM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class BTS : AbstractSegment  {

  /**
   * Creates a BTS (BATCH TRAILER) segment object that belongs to the given 
   * message.  
   */
	public BTS(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), false, 1, 10, new System.Object[]{message}, "BATCH MESSAGE COUNT");
       this.add(typeof(ST), false, 1, 80, new System.Object[]{message}, "BATCH COMMENT");
       this.add(typeof(CM), false, 1, 100, new System.Object[]{message}, "BATCH TOTALS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns BATCH MESSAGE COUNT(BTS-1).
	///</summary>
	public ST BATCHMESSAGECOUNT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH COMMENT(BTS-2).
	///</summary>
	public ST BATCHCOMMENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BATCH TOTALS(BTS-3).
	///</summary>
	public CM BATCHTOTALS
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\DG1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 DG1 message segment. 
/// This segment has the following fields:<ol>
///<li>DG1-1: SET ID - DIAGNOSIS (SI)</li>
///<li>DG1-2: DIAGNOSIS CODING METHOD (ID)</li>
///<li>DG1-3: DIAGNOSIS CODE (ID)</li>
///<li>DG1-4: DIAGNOSIS DESCRIPTION (ST)</li>
///<li>DG1-5: DIAGNOSIS DATE/TIME (TS)</li>
///<li>DG1-6: DIAGNOSIS/DRG TYPE (ID)</li>
///<li>DG1-7: MAJOR DIAGNOSTIC CATEGORY (ST)</li>
///<li>DG1-8: DIAGNOSTIC RELATED GROUP (ID)</li>
///<li>DG1-9: DRG APPROVAL INDICATOR (ID)</li>
///<li>DG1-10: DRG GROUPER REVIEW CODE (ID)</li>
///<li>DG1-11: OUTLIER TYPE (ID)</li>
///<li>DG1-12: OUTLIER DAYS (NM)</li>
///<li>DG1-13: OUTLIER COST (NM)</li>
///<li>DG1-14: GROUPER VERSION AND TYPE (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class DG1 : AbstractSegment  {

  /**
   * Creates a DG1 (DIAGNOSIS) segment object that belongs to the given 
   * message.  
   */
	public DG1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), true, 1, 4, new System.Object[]{message}, "SET ID - DIAGNOSIS");
       this.add(typeof(ID), true, 1, 2, new System.Object[]{message, 53}, "DIAGNOSIS CODING METHOD");
       this.add(typeof(ID), false, 1, 8, new System.Object[]{message, 51}, "DIAGNOSIS CODE");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "DIAGNOSIS DESCRIPTION");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DIAGNOSIS DATE/TIME");
       this.add(typeof(ID), true, 1, 2, new System.Object[]{message, 52}, "DIAGNOSIS/DRG TYPE");
       this.add(typeof(ST), false, 1, 4, new System.Object[]{message}, "MAJOR DIAGNOSTIC CATEGORY");
       this.add(typeof(ID), false, 1, 4, new System.Object[]{message, 55}, "DIAGNOSTIC RELATED GROUP");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "DRG APPROVAL INDICATOR");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 56}, "DRG GROUPER REVIEW CODE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 83}, "OUTLIER TYPE");
       this.add(typeof(NM), false, 1, 3, new System.Object[]{message}, "OUTLIER DAYS");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "OUTLIER COST");
       this.add(typeof(ST), false, 1, 4, new System.Object[]{message}, "GROUPER VERSION AND TYPE");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - DIAGNOSIS(DG1-1).
	///</summary>
	public SI SETIDDIAGNOSIS
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS CODING METHOD(DG1-2).
	///</summary>
	public ID DIAGNOSISCODINGMETHOD
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS CODE(DG1-3).
	///</summary>
	public ID DIAGNOSISCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS DESCRIPTION(DG1-4).
	///</summary>
	public ST DIAGNOSISDESCRIPTION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS DATE/TIME(DG1-5).
	///</summary>
	public TS DIAGNOSISDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS/DRG TYPE(DG1-6).
	///</summary>
	public ID DIAGNOSISDRGTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MAJOR DIAGNOSTIC CATEGORY(DG1-7).
	///</summary>
	public ST MAJORDIAGNOSTICCATEGORY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSTIC RELATED GROUP(DG1-8).
	///</summary>
	public ID DIAGNOSTICRELATEDGROUP
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRG APPROVAL INDICATOR(DG1-9).
	///</summary>
	public ID DRGAPPROVALINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRG GROUPER REVIEW CODE(DG1-10).
	///</summary>
	public ID DRGGROUPERREVIEWCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OUTLIER TYPE(DG1-11).
	///</summary>
	public ID OUTLIERTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OUTLIER DAYS(DG1-12).
	///</summary>
	public NM OUTLIERDAYS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OUTLIER COST(DG1-13).
	///</summary>
	public NM OUTLIERCOST
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GROUPER VERSION AND TYPE(DG1-14).
	///</summary>
	public ST GROUPERVERSIONANDTYPE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\DSC.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 DSC message segment. 
/// This segment has the following fields:<ol>
///<li>DSC-1: CONTINUATION POINTER (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class DSC : AbstractSegment  {

  /**
   * Creates a DSC (CONTINUATION POINTER) segment object that belongs to the given 
   * message.  
   */
	public DSC(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "CONTINUATION POINTER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns CONTINUATION POINTER(DSC-1).
	///</summary>
	public ST CONTINUATIONPOINTER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\DSP.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 DSP message segment. 
/// This segment has the following fields:<ol>
///<li>DSP-1: SET ID - DISPLAY DATA (SI)</li>
///<li>DSP-2: DISPLAY LEVEL (SI)</li>
///<li>DSP-3: DATA LINE (TX)</li>
///<li>DSP-4: LOGICAL BREAK POINT (ST)</li>
///<li>DSP-5: RESULT ID (TX)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class DSP : AbstractSegment  {

  /**
   * Creates a DSP (DISPLAY DATA) segment object that belongs to the given 
   * message.  
   */
	public DSP(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - DISPLAY DATA");
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "DISPLAY LEVEL");
       this.add(typeof(TX), true, 1, 300, new System.Object[]{message}, "DATA LINE");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "LOGICAL BREAK POINT");
       this.add(typeof(TX), false, 1, 20, new System.Object[]{message}, "RESULT ID");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - DISPLAY DATA(DSP-1).
	///</summary>
	public SI SETIDDISPLAYDATA
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DISPLAY LEVEL(DSP-2).
	///</summary>
	public SI DISPLAYLEVEL
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATA LINE(DSP-3).
	///</summary>
	public TX DATALINE
	{
		get{
			TX ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (TX)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns LOGICAL BREAK POINT(DSP-4).
	///</summary>
	public ST LOGICALBREAKPOINT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RESULT ID(DSP-5).
	///</summary>
	public TX RESULTID
	{
		get{
			TX ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (TX)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\ERR.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 ERR message segment. 
/// This segment has the following fields:<ol>
///<li>ERR-1: ERROR CODE AND LOCATION (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class ERR : AbstractSegment  {

  /**
   * Creates a ERR (ERROR) segment object that belongs to the given 
   * message.  
   */
	public ERR(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 0, 80, new System.Object[]{message, 60}, "ERROR CODE AND LOCATION");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns a single repetition of ERROR CODE AND LOCATION(ERR-1).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetERRORCODEANDLOCATION(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of ERROR CODE AND LOCATION (ERR-1).
   ///</summary>
  public ID[] GetERRORCODEANDLOCATION() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(1);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of ERROR CODE AND LOCATION (ERR-1).
   ///</summary>
  public int ERRORCODEANDLOCATIONRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(1);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\EVN.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 EVN message segment. 
/// This segment has the following fields:<ol>
///<li>EVN-1: EVENT TYPE CODE (ID)</li>
///<li>EVN-2: DATE/TIME OF EVENT (TS)</li>
///<li>EVN-3: DATE/TIME PLANNED EVENT (TS)</li>
///<li>EVN-4: EVENT REASON CODE (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class EVN : AbstractSegment  {

  /**
   * Creates a EVN (EVENT TYPE) segment object that belongs to the given 
   * message.  
   */
	public EVN(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 1, 3, new System.Object[]{message, 3}, "EVENT TYPE CODE");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "DATE/TIME OF EVENT");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DATE/TIME PLANNED EVENT");
       this.add(typeof(ID), false, 1, 3, new System.Object[]{message, 62}, "EVENT REASON CODE");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns EVENT TYPE CODE(EVN-1).
	///</summary>
	public ID EVENTTYPECODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE/TIME OF EVENT(EVN-2).
	///</summary>
	public TS DATETIMEOFEVENT
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE/TIME PLANNED EVENT(EVN-3).
	///</summary>
	public TS DATETIMEPLANNEDEVENT
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns EVENT REASON CODE(EVN-4).
	///</summary>
	public ID EVENTREASONCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\FHS.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 FHS message segment. 
/// This segment has the following fields:<ol>
///<li>FHS-1: FILE FIELD SEPARATOR (ST)</li>
///<li>FHS-2: FILE ENCODING CHARACTERS (ST)</li>
///<li>FHS-3: FILE SENDING APPLICATION (ST)</li>
///<li>FHS-4: FILE SENDING FACILITY (ST)</li>
///<li>FHS-5: FILE RECEIVING APPLICATION (ST)</li>
///<li>FHS-6: FILE RECEIVING FACILITY (ST)</li>
///<li>FHS-7: DATE/TIME OF FILE CREATION (TS)</li>
///<li>FHS-8: FILE SECURITY (ST)</li>
///<li>FHS-9: FILE NAME/ID (ST)</li>
///<li>FHS-10: FILE HEADER COMMENT (ST)</li>
///<li>FHS-11: FILE CONTROL ID (ST)</li>
///<li>FHS-12: REFERENCE FILE CONTROL ID (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class FHS : AbstractSegment  {

  /**
   * Creates a FHS (FILE HEADER) segment object that belongs to the given 
   * message.  
   */
	public FHS(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 1, 1, new System.Object[]{message}, "FILE FIELD SEPARATOR");
       this.add(typeof(ST), true, 1, 4, new System.Object[]{message}, "FILE ENCODING CHARACTERS");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "FILE SENDING APPLICATION");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "FILE SENDING FACILITY");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "FILE RECEIVING APPLICATION");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "FILE RECEIVING FACILITY");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DATE/TIME OF FILE CREATION");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "FILE SECURITY");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "FILE NAME/ID");
       this.add(typeof(ST), false, 1, 80, new System.Object[]{message}, "FILE HEADER COMMENT");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "FILE CONTROL ID");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "REFERENCE FILE CONTROL ID");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns FILE FIELD SEPARATOR(FHS-1).
	///</summary>
	public ST FILEFIELDSEPARATOR
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE ENCODING CHARACTERS(FHS-2).
	///</summary>
	public ST FILEENCODINGCHARACTERS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE SENDING APPLICATION(FHS-3).
	///</summary>
	public ST FILESENDINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE SENDING FACILITY(FHS-4).
	///</summary>
	public ST FILESENDINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE RECEIVING APPLICATION(FHS-5).
	///</summary>
	public ST FILERECEIVINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE RECEIVING FACILITY(FHS-6).
	///</summary>
	public ST FILERECEIVINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE/TIME OF FILE CREATION(FHS-7).
	///</summary>
	public TS DATETIMEOFFILECREATION
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE SECURITY(FHS-8).
	///</summary>
	public ST FILESECURITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE NAME/ID(FHS-9).
	///</summary>
	public ST FILENAMEID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE HEADER COMMENT(FHS-10).
	///</summary>
	public ST FILEHEADERCOMMENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE CONTROL ID(FHS-11).
	///</summary>
	public ST FILECONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REFERENCE FILE CONTROL ID(FHS-12).
	///</summary>
	public ST REFERENCEFILECONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\FT1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 FT1 message segment. 
/// This segment has the following fields:<ol>
///<li>FT1-1: SET ID - FINANCIAL TRANSACTION (SI)</li>
///<li>FT1-2: TRANSACTION ID (ST)</li>
///<li>FT1-3: TRANSACTION BATCH ID (ST)</li>
///<li>FT1-4: TRANSACTION DATE (DT)</li>
///<li>FT1-5: TRANSACTION POSTING DATE (DT)</li>
///<li>FT1-6: TRANSACTION TYPE (ID)</li>
///<li>FT1-7: TRANSACTION CODE (ID)</li>
///<li>FT1-8: TRANSACTION DESCRIPTION (ST)</li>
///<li>FT1-9: TRANSACTION DESCRIPTION - ALT (ST)</li>
///<li>FT1-10: TRANSACTION AMOUNT - EXTENDED (NM)</li>
///<li>FT1-11: TRANSACTION QUANTITY (NM)</li>
///<li>FT1-12: TRANSACTION AMOUNT - UNIT (NM)</li>
///<li>FT1-13: DEPARTMENT CODE (ST)</li>
///<li>FT1-14: INSURANCE PLAN ID (ID)</li>
///<li>FT1-15: INSURANCE AMOUNT (NM)</li>
///<li>FT1-16: PATIENT LOCATION (ST)</li>
///<li>FT1-17: FEE SCHEDULE (ID)</li>
///<li>FT1-18: PATIENT TYPE (ID)</li>
///<li>FT1-19: DIAGNOSIS CODE (ID)</li>
///<li>FT1-20: PERFORMED BY CODE (CN)</li>
///<li>FT1-21: ORDERED BY CODE (CN)</li>
///<li>FT1-22: UNIT COST (NM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class FT1 : AbstractSegment  {

  /**
   * Creates a FT1 (FINANCIAL TRANSACTION) segment object that belongs to the given 
   * message.  
   */
	public FT1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - FINANCIAL TRANSACTION");
       this.add(typeof(ST), false, 1, 12, new System.Object[]{message}, "TRANSACTION ID");
       this.add(typeof(ST), false, 1, 5, new System.Object[]{message}, "TRANSACTION BATCH ID");
       this.add(typeof(DT), true, 1, 8, new System.Object[]{message}, "TRANSACTION DATE");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "TRANSACTION POSTING DATE");
       this.add(typeof(ID), true, 1, 8, new System.Object[]{message, 17}, "TRANSACTION TYPE");
       this.add(typeof(ID), true, 1, 20, new System.Object[]{message, 96}, "TRANSACTION CODE");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "TRANSACTION DESCRIPTION");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "TRANSACTION DESCRIPTION - ALT");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "TRANSACTION AMOUNT - EXTENDED");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "TRANSACTION QUANTITY");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "TRANSACTION AMOUNT - UNIT");
       this.add(typeof(ST), false, 1, 16, new System.Object[]{message}, "DEPARTMENT CODE");
       this.add(typeof(ID), false, 1, 8, new System.Object[]{message, 72}, "INSURANCE PLAN ID");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "INSURANCE AMOUNT");
       this.add(typeof(ST), false, 1, 12, new System.Object[]{message}, "PATIENT LOCATION");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 24}, "FEE SCHEDULE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 18}, "PATIENT TYPE");
       this.add(typeof(ID), false, 1, 8, new System.Object[]{message, 51}, "DIAGNOSIS CODE");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "PERFORMED BY CODE");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "ORDERED BY CODE");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "UNIT COST");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - FINANCIAL TRANSACTION(FT1-1).
	///</summary>
	public SI SETIDFINANCIALTRANSACTION
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION ID(FT1-2).
	///</summary>
	public ST TRANSACTIONID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION BATCH ID(FT1-3).
	///</summary>
	public ST TRANSACTIONBATCHID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION DATE(FT1-4).
	///</summary>
	public DT TRANSACTIONDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION POSTING DATE(FT1-5).
	///</summary>
	public DT TRANSACTIONPOSTINGDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION TYPE(FT1-6).
	///</summary>
	public ID TRANSACTIONTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION CODE(FT1-7).
	///</summary>
	public ID TRANSACTIONCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION DESCRIPTION(FT1-8).
	///</summary>
	public ST TRANSACTIONDESCRIPTION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION DESCRIPTION - ALT(FT1-9).
	///</summary>
	public ST TRANSACTIONDESCRIPTIONALT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION AMOUNT - EXTENDED(FT1-10).
	///</summary>
	public NM TRANSACTIONAMOUNTEXTENDED
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION QUANTITY(FT1-11).
	///</summary>
	public NM TRANSACTIONQUANTITY
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSACTION AMOUNT - UNIT(FT1-12).
	///</summary>
	public NM TRANSACTIONAMOUNTUNIT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DEPARTMENT CODE(FT1-13).
	///</summary>
	public ST DEPARTMENTCODE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE PLAN ID(FT1-14).
	///</summary>
	public ID INSURANCEPLANID
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE AMOUNT(FT1-15).
	///</summary>
	public NM INSURANCEAMOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT LOCATION(FT1-16).
	///</summary>
	public ST PATIENTLOCATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FEE SCHEDULE(FT1-17).
	///</summary>
	public ID FEESCHEDULE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT TYPE(FT1-18).
	///</summary>
	public ID PATIENTTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSIS CODE(FT1-19).
	///</summary>
	public ID DIAGNOSISCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PERFORMED BY CODE(FT1-20).
	///</summary>
	public CN PERFORMEDBYCODE
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ORDERED BY CODE(FT1-21).
	///</summary>
	public CN ORDEREDBYCODE
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UNIT COST(FT1-22).
	///</summary>
	public NM UNITCOST
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\FTS.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 FTS message segment. 
/// This segment has the following fields:<ol>
///<li>FTS-1: FILE BATCH COUNT (ST)</li>
///<li>FTS-2: FILE TRAILER COMMENT (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class FTS : AbstractSegment  {

  /**
   * Creates a FTS (FILE TRAILER) segment object that belongs to the given 
   * message.  
   */
	public FTS(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), false, 1, 10, new System.Object[]{message}, "FILE BATCH COUNT");
       this.add(typeof(ST), false, 1, 80, new System.Object[]{message}, "FILE TRAILER COMMENT");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns FILE BATCH COUNT(FTS-1).
	///</summary>
	public ST FILEBATCHCOUNT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILE TRAILER COMMENT(FTS-2).
	///</summary>
	public ST FILETRAILERCOMMENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\GT1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 GT1 message segment. 
/// This segment has the following fields:<ol>
///<li>GT1-1: SET ID - GUARANTOR (SI)</li>
///<li>GT1-2: GUARANTOR NUMBER (ID)</li>
///<li>GT1-3: GUARANTOR NAME (PN)</li>
///<li>GT1-4: GUARANTOR SPOUSE NAME (PN)</li>
///<li>GT1-5: GUARANTOR ADDRESS (AD)</li>
///<li>GT1-6: GUARANTOR PH. NUM.- HOME (TN)</li>
///<li>GT1-7: GUARANTOR PH. NUM-BUSINESS (TN)</li>
///<li>GT1-8: GUARANTOR DATE OF BIRTH (DT)</li>
///<li>GT1-9: GUARANTOR SEX (ID)</li>
///<li>GT1-10: GUARANTOR TYPE (ID)</li>
///<li>GT1-11: GUARANTOR RELATIONSHIP (ID)</li>
///<li>GT1-12: GUARANTOR SSN (ST)</li>
///<li>GT1-13: GUARANTOR DATE - BEGIN (DT)</li>
///<li>GT1-14: GUARANTOR DATE - END (DT)</li>
///<li>GT1-15: GUARANTOR PRIORITY (NM)</li>
///<li>GT1-16: GUARANTOR EMPLOYER NAME (ST)</li>
///<li>GT1-17: GUARANTOR EMPLOYER ADDRESS (AD)</li>
///<li>GT1-18: GUARANTOR EMPLOY PHONE # (TN)</li>
///<li>GT1-19: GUARANTOR EMPLOYEE ID NUM (ST)</li>
///<li>GT1-20: GUARANTOR EMPLOYMENT STATUS (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class GT1 : AbstractSegment  {

  /**
   * Creates a GT1 (GUARANTOR) segment object that belongs to the given 
   * message.  
   */
	public GT1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), true, 1, 4, new System.Object[]{message}, "SET ID - GUARANTOR");
       this.add(typeof(ID), false, 1, 20, new System.Object[]{message, 0}, "GUARANTOR NUMBER");
       this.add(typeof(PN), true, 1, 48, new System.Object[]{message}, "GUARANTOR NAME");
       this.add(typeof(PN), false, 1, 48, new System.Object[]{message}, "GUARANTOR SPOUSE NAME");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "GUARANTOR ADDRESS");
       this.add(typeof(TN), false, 1, 40, new System.Object[]{message}, "GUARANTOR PH. NUM.- HOME");
       this.add(typeof(TN), false, 1, 40, new System.Object[]{message}, "GUARANTOR PH. NUM-BUSINESS");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "GUARANTOR DATE OF BIRTH");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 1}, "GUARANTOR SEX");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 68}, "GUARANTOR TYPE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 63}, "GUARANTOR RELATIONSHIP");
       this.add(typeof(ST), false, 1, 11, new System.Object[]{message}, "GUARANTOR SSN");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "GUARANTOR DATE - BEGIN");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "GUARANTOR DATE - END");
       this.add(typeof(NM), false, 1, 2, new System.Object[]{message}, "GUARANTOR PRIORITY");
       this.add(typeof(ST), false, 1, 45, new System.Object[]{message}, "GUARANTOR EMPLOYER NAME");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "GUARANTOR EMPLOYER ADDRESS");
       this.add(typeof(TN), false, 1, 40, new System.Object[]{message}, "GUARANTOR EMPLOY PHONE #");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "GUARANTOR EMPLOYEE ID NUM");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 66}, "GUARANTOR EMPLOYMENT STATUS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - GUARANTOR(GT1-1).
	///</summary>
	public SI SETIDGUARANTOR
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR NUMBER(GT1-2).
	///</summary>
	public ID GUARANTORNUMBER
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR NAME(GT1-3).
	///</summary>
	public PN GUARANTORNAME
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR SPOUSE NAME(GT1-4).
	///</summary>
	public PN GUARANTORSPOUSENAME
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR ADDRESS(GT1-5).
	///</summary>
	public AD GUARANTORADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR PH. NUM.- HOME(GT1-6).
	///</summary>
	public TN GUARANTORPHNUMHOME
	{
		get{
			TN ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (TN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR PH. NUM-BUSINESS(GT1-7).
	///</summary>
	public TN GUARANTORPHNUMBUSINESS
	{
		get{
			TN ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR DATE OF BIRTH(GT1-8).
	///</summary>
	public DT GUARANTORDATEOFBIRTH
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR SEX(GT1-9).
	///</summary>
	public ID GUARANTORSEX
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR TYPE(GT1-10).
	///</summary>
	public ID GUARANTORTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR RELATIONSHIP(GT1-11).
	///</summary>
	public ID GUARANTORRELATIONSHIP
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR SSN(GT1-12).
	///</summary>
	public ST GUARANTORSSN
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR DATE - BEGIN(GT1-13).
	///</summary>
	public DT GUARANTORDATEBEGIN
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR DATE - END(GT1-14).
	///</summary>
	public DT GUARANTORDATEEND
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR PRIORITY(GT1-15).
	///</summary>
	public NM GUARANTORPRIORITY
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR EMPLOYER NAME(GT1-16).
	///</summary>
	public ST GUARANTOREMPLOYERNAME
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR EMPLOYER ADDRESS(GT1-17).
	///</summary>
	public AD GUARANTOREMPLOYERADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR EMPLOY PHONE #(GT1-18).
	///</summary>
	public TN GUARANTOREMPLOYPHONE
	{
		get{
			TN ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (TN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR EMPLOYEE ID NUM(GT1-19).
	///</summary>
	public ST GUARANTOREMPLOYEEIDNUM
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GUARANTOR EMPLOYMENT STATUS(GT1-20).
	///</summary>
	public ID GUARANTOREMPLOYMENTSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\IN1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 IN1 message segment. 
/// This segment has the following fields:<ol>
///<li>IN1-1: SET ID - INSURANCE (SI)</li>
///<li>IN1-2: INSURANCE PLAN ID (ID)</li>
///<li>IN1-3: INSURANCE COMPANY ID (ST)</li>
///<li>IN1-4: INSURANCE COMPANY NAME (ST)</li>
///<li>IN1-5: INSURANCE COMPANY ADDRESS (AD)</li>
///<li>IN1-6: INSURANCE CO. CONTACT PERS (PN)</li>
///<li>IN1-7: INSURANCE CO PHONE NUMBER (TN)</li>
///<li>IN1-8: GROUP NUMBER (ST)</li>
///<li>IN1-9: GROUP NAME (ST)</li>
///<li>IN1-10: INSURED'S GROUP EMP. ID (ST)</li>
///<li>IN1-11: INSURED'S GROUP EMP. NAME (ST)</li>
///<li>IN1-12: PLAN EFFECTIVE DATE (DT)</li>
///<li>IN1-13: PLAN EXPIRATION DATE (DT)</li>
///<li>IN1-14: AUTHORIZATION INFORMATION (ST)</li>
///<li>IN1-15: PLAN TYPE (ID)</li>
///<li>IN1-16: NAME OF INSURED (PN)</li>
///<li>IN1-17: INSURED'S RELATIONSHIP TO PATIENT (ID)</li>
///<li>IN1-18: INSURED'S DATE OF BIRTH (DT)</li>
///<li>IN1-19: INSURED'S ADDRESS (AD)</li>
///<li>IN1-20: ASSIGNMENT OF BENEFITS (ID)</li>
///<li>IN1-21: COORDINATION OF BENEFITS (ID)</li>
///<li>IN1-22: COORD OF BEN. PRIORITY (ST)</li>
///<li>IN1-23: NOTICE OF ADMISSION CODE (ID)</li>
///<li>IN1-24: NOTICE OF ADMISSION DATE (DT)</li>
///<li>IN1-25: RPT OF ELIGIBILITY CODE (ID)</li>
///<li>IN1-26: RPT OF ELIGIBILITY DATE (DT)</li>
///<li>IN1-27: RELEASE INFORMATION CODE (ID)</li>
///<li>IN1-28: PRE-ADMIT CERT. (PAC) (ST)</li>
///<li>IN1-29: VERIFICATION DATE (DT)</li>
///<li>IN1-30: VERIFICATION BY (CM)</li>
///<li>IN1-31: TYPE OF AGREEMENT CODE (ID)</li>
///<li>IN1-32: BILLING STATUS (ID)</li>
///<li>IN1-33: LIFETIME RESERVE DAYS (NM)</li>
///<li>IN1-34: DELAY BEFORE L. R. DAY (NM)</li>
///<li>IN1-35: COMPANY PLAN CODE (ST)</li>
///<li>IN1-36: POLICY NUMBER (ST)</li>
///<li>IN1-37: POLICY DEDUCTIBLE (NM)</li>
///<li>IN1-38: POLICY LIMIT - AMOUNT (NM)</li>
///<li>IN1-39: POLICY LIMIT - DAYS (NM)</li>
///<li>IN1-40: ROOM RATE - SEMI-PRIVATE (NM)</li>
///<li>IN1-41: ROOM RATE - PRIVATE (NM)</li>
///<li>IN1-42: INSURED'S EMPLOYMENT STATUS (ID)</li>
///<li>IN1-43: INSURED'S SEX (ID)</li>
///<li>IN1-44: INSURED'S EMPLOYER ADDRESS (AD)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class IN1 : AbstractSegment  {

  /**
   * Creates a IN1 (INSURANCE) segment object that belongs to the given 
   * message.  
   */
	public IN1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), true, 1, 4, new System.Object[]{message}, "SET ID - INSURANCE");
       this.add(typeof(ID), true, 1, 8, new System.Object[]{message, 72}, "INSURANCE PLAN ID");
       this.add(typeof(ST), true, 1, 6, new System.Object[]{message}, "INSURANCE COMPANY ID");
       this.add(typeof(ST), false, 1, 45, new System.Object[]{message}, "INSURANCE COMPANY NAME");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "INSURANCE COMPANY ADDRESS");
       this.add(typeof(PN), false, 1, 48, new System.Object[]{message}, "INSURANCE CO. CONTACT PERS");
       this.add(typeof(TN), false, 1, 40, new System.Object[]{message}, "INSURANCE CO PHONE NUMBER");
       this.add(typeof(ST), false, 1, 12, new System.Object[]{message}, "GROUP NUMBER");
       this.add(typeof(ST), false, 1, 35, new System.Object[]{message}, "GROUP NAME");
       this.add(typeof(ST), false, 1, 12, new System.Object[]{message}, "INSURED'S GROUP EMP. ID");
       this.add(typeof(ST), false, 1, 45, new System.Object[]{message}, "INSURED'S GROUP EMP. NAME");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "PLAN EFFECTIVE DATE");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "PLAN EXPIRATION DATE");
       this.add(typeof(ST), false, 1, 55, new System.Object[]{message}, "AUTHORIZATION INFORMATION");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 86}, "PLAN TYPE");
       this.add(typeof(PN), false, 1, 48, new System.Object[]{message}, "NAME OF INSURED");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 63}, "INSURED'S RELATIONSHIP TO PATIENT");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "INSURED'S DATE OF BIRTH");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "INSURED'S ADDRESS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "ASSIGNMENT OF BENEFITS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "COORDINATION OF BENEFITS");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "COORD OF BEN. PRIORITY");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 81}, "NOTICE OF ADMISSION CODE");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "NOTICE OF ADMISSION DATE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 94}, "RPT OF ELIGIBILITY CODE");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "RPT OF ELIGIBILITY DATE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 93}, "RELEASE INFORMATION CODE");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "PRE-ADMIT CERT. (PAC)");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "VERIFICATION DATE");
       this.add(typeof(CM), false, 1, 60, new System.Object[]{message}, "VERIFICATION BY");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 98}, "TYPE OF AGREEMENT CODE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 22}, "BILLING STATUS");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "LIFETIME RESERVE DAYS");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "DELAY BEFORE L. R. DAY");
       this.add(typeof(ST), false, 1, 8, new System.Object[]{message}, "COMPANY PLAN CODE");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "POLICY NUMBER");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "POLICY DEDUCTIBLE");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "POLICY LIMIT - AMOUNT");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "POLICY LIMIT - DAYS");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "ROOM RATE - SEMI-PRIVATE");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "ROOM RATE - PRIVATE");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 66}, "INSURED'S EMPLOYMENT STATUS");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 1}, "INSURED'S SEX");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "INSURED'S EMPLOYER ADDRESS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - INSURANCE(IN1-1).
	///</summary>
	public SI SETIDINSURANCE
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE PLAN ID(IN1-2).
	///</summary>
	public ID INSURANCEPLANID
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE COMPANY ID(IN1-3).
	///</summary>
	public ST INSURANCECOMPANYID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE COMPANY NAME(IN1-4).
	///</summary>
	public ST INSURANCECOMPANYNAME
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE COMPANY ADDRESS(IN1-5).
	///</summary>
	public AD INSURANCECOMPANYADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE CO. CONTACT PERS(IN1-6).
	///</summary>
	public PN INSURANCECOCONTACTPERS
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURANCE CO PHONE NUMBER(IN1-7).
	///</summary>
	public TN INSURANCECOPHONENUMBER
	{
		get{
			TN ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GROUP NUMBER(IN1-8).
	///</summary>
	public ST GROUPNUMBER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns GROUP NAME(IN1-9).
	///</summary>
	public ST GROUPNAME
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S GROUP EMP. ID(IN1-10).
	///</summary>
	public ST INSUREDSGROUPEMPID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S GROUP EMP. NAME(IN1-11).
	///</summary>
	public ST INSUREDSGROUPEMPNAME
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLAN EFFECTIVE DATE(IN1-12).
	///</summary>
	public DT PLANEFFECTIVEDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLAN EXPIRATION DATE(IN1-13).
	///</summary>
	public DT PLANEXPIRATIONDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns AUTHORIZATION INFORMATION(IN1-14).
	///</summary>
	public ST AUTHORIZATIONINFORMATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLAN TYPE(IN1-15).
	///</summary>
	public ID PLANTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NAME OF INSURED(IN1-16).
	///</summary>
	public PN NAMEOFINSURED
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S RELATIONSHIP TO PATIENT(IN1-17).
	///</summary>
	public ID INSUREDSRELATIONSHIPTOPATIENT
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S DATE OF BIRTH(IN1-18).
	///</summary>
	public DT INSUREDSDATEOFBIRTH
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S ADDRESS(IN1-19).
	///</summary>
	public AD INSUREDSADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ASSIGNMENT OF BENEFITS(IN1-20).
	///</summary>
	public ID ASSIGNMENTOFBENEFITS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COORDINATION OF BENEFITS(IN1-21).
	///</summary>
	public ID COORDINATIONOFBENEFITS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COORD OF BEN. PRIORITY(IN1-22).
	///</summary>
	public ST COORDOFBENPRIORITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NOTICE OF ADMISSION CODE(IN1-23).
	///</summary>
	public ID NOTICEOFADMISSIONCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(23, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NOTICE OF ADMISSION DATE(IN1-24).
	///</summary>
	public DT NOTICEOFADMISSIONDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(24, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RPT OF ELIGIBILITY CODE(IN1-25).
	///</summary>
	public ID RPTOFELIGIBILITYCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(25, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RPT OF ELIGIBILITY DATE(IN1-26).
	///</summary>
	public DT RPTOFELIGIBILITYDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(26, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RELEASE INFORMATION CODE(IN1-27).
	///</summary>
	public ID RELEASEINFORMATIONCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(27, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRE-ADMIT CERT. (PAC)(IN1-28).
	///</summary>
	public ST PREADMITCERT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(28, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VERIFICATION DATE(IN1-29).
	///</summary>
	public DT VERIFICATIONDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(29, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VERIFICATION BY(IN1-30).
	///</summary>
	public CM VERIFICATIONBY
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(30, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TYPE OF AGREEMENT CODE(IN1-31).
	///</summary>
	public ID TYPEOFAGREEMENTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(31, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BILLING STATUS(IN1-32).
	///</summary>
	public ID BILLINGSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(32, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns LIFETIME RESERVE DAYS(IN1-33).
	///</summary>
	public NM LIFETIMERESERVEDAYS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(33, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DELAY BEFORE L. R. DAY(IN1-34).
	///</summary>
	public NM DELAYBEFORELRDAY
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(34, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COMPANY PLAN CODE(IN1-35).
	///</summary>
	public ST COMPANYPLANCODE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(35, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns POLICY NUMBER(IN1-36).
	///</summary>
	public ST POLICYNUMBER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(36, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns POLICY DEDUCTIBLE(IN1-37).
	///</summary>
	public NM POLICYDEDUCTIBLE
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(37, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns POLICY LIMIT - AMOUNT(IN1-38).
	///</summary>
	public NM POLICYLIMITAMOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(38, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns POLICY LIMIT - DAYS(IN1-39).
	///</summary>
	public NM POLICYLIMITDAYS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(39, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ROOM RATE - SEMI-PRIVATE(IN1-40).
	///</summary>
	public NM ROOMRATESEMIPRIVATE
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(40, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ROOM RATE - PRIVATE(IN1-41).
	///</summary>
	public NM ROOMRATEPRIVATE
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(41, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S EMPLOYMENT STATUS(IN1-42).
	///</summary>
	public ID INSUREDSEMPLOYMENTSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(42, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S SEX(IN1-43).
	///</summary>
	public ID INSUREDSSEX
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(43, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns INSURED'S EMPLOYER ADDRESS(IN1-44).
	///</summary>
	public AD INSUREDSEMPLOYERADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(44, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\MRG.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 MRG message segment. 
/// This segment has the following fields:<ol>
///<li>MRG-1: PRIOR PATIENT ID - INTERNAL (CK)</li>
///<li>MRG-2: PRIOR ALTERNATE PATIENT ID (CK)</li>
///<li>MRG-3: PRIOR PATIENT ACCOUNT NUMBER (CK)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class MRG : AbstractSegment  {

  /**
   * Creates a MRG (MERGE PATIENT INFORMATION) segment object that belongs to the given 
   * message.  
   */
	public MRG(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(CK), true, 1, 16, new System.Object[]{message}, "PRIOR PATIENT ID - INTERNAL");
       this.add(typeof(CK), false, 1, 16, new System.Object[]{message}, "PRIOR ALTERNATE PATIENT ID");
       this.add(typeof(CK), false, 1, 20, new System.Object[]{message}, "PRIOR PATIENT ACCOUNT NUMBER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns PRIOR PATIENT ID - INTERNAL(MRG-1).
	///</summary>
	public CK PRIORPATIENTIDINTERNAL
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRIOR ALTERNATE PATIENT ID(MRG-2).
	///</summary>
	public CK PRIORALTERNATEPATIENTID
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRIOR PATIENT ACCOUNT NUMBER(MRG-3).
	///</summary>
	public CK PRIORPATIENTACCOUNTNUMBER
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\MSA.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 MSA message segment. 
/// This segment has the following fields:<ol>
///<li>MSA-1: ACKNOWLEDGMENT CODE (ID)</li>
///<li>MSA-2: MESSAGE CONTROL ID (ST)</li>
///<li>MSA-3: TEXT MESSAGE (ST)</li>
///<li>MSA-4: EXPECTED SEQUENCE NUMBER (NM)</li>
///<li>MSA-5: DELAYED ACKNOWLEDGMENT TYPE (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class MSA : AbstractSegment  {

  /**
   * Creates a MSA (MESSAGE ACKNOWLEDGMENT) segment object that belongs to the given 
   * message.  
   */
	public MSA(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 1, 2, new System.Object[]{message, 8}, "ACKNOWLEDGMENT CODE");
       this.add(typeof(ST), true, 1, 20, new System.Object[]{message}, "MESSAGE CONTROL ID");
       this.add(typeof(ST), false, 1, 80, new System.Object[]{message}, "TEXT MESSAGE");
       this.add(typeof(NM), false, 1, 15, new System.Object[]{message}, "EXPECTED SEQUENCE NUMBER");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 102}, "DELAYED ACKNOWLEDGMENT TYPE");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ACKNOWLEDGMENT CODE(MSA-1).
	///</summary>
	public ID ACKNOWLEDGMENTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MESSAGE CONTROL ID(MSA-2).
	///</summary>
	public ST MESSAGECONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TEXT MESSAGE(MSA-3).
	///</summary>
	public ST TEXTMESSAGE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns EXPECTED SEQUENCE NUMBER(MSA-4).
	///</summary>
	public NM EXPECTEDSEQUENCENUMBER
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DELAYED ACKNOWLEDGMENT TYPE(MSA-5).
	///</summary>
	public ID DELAYEDACKNOWLEDGMENTTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\MSH.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 MSH message segment. 
/// This segment has the following fields:<ol>
///<li>MSH-1: FIELD SEPARATOR (ST)</li>
///<li>MSH-2: ENCODING CHARACTERS (ST)</li>
///<li>MSH-3: SENDING APPLICATION (ST)</li>
///<li>MSH-4: SENDING FACILITY (ST)</li>
///<li>MSH-5: RECEIVING APPLICATION (ST)</li>
///<li>MSH-6: RECEIVING FACILITY (ST)</li>
///<li>MSH-7: DATE/TIME OF MESSAGE (TS)</li>
///<li>MSH-8: Security (ST)</li>
///<li>MSH-9: MESSAGE TYPE (ID)</li>
///<li>MSH-10: MESSAGE CONTROL ID (ST)</li>
///<li>MSH-11: PROCESSING ID (ID)</li>
///<li>MSH-12: VERSION ID (NM)</li>
///<li>MSH-13: SEQUENCE NUMBER (NM)</li>
///<li>MSH-14: CONTINUATION POINTER (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class MSH : AbstractSegment  {

  /**
   * Creates a MSH (MESSAGE HEADER) segment object that belongs to the given 
   * message.  
   */
	public MSH(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 1, 1, new System.Object[]{message}, "FIELD SEPARATOR");
       this.add(typeof(ST), true, 1, 4, new System.Object[]{message}, "ENCODING CHARACTERS");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "SENDING APPLICATION");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "SENDING FACILITY");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "RECEIVING APPLICATION");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "RECEIVING FACILITY");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DATE/TIME OF MESSAGE");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "Security");
       this.add(typeof(ID), true, 1, 7, new System.Object[]{message, 76}, "MESSAGE TYPE");
       this.add(typeof(ST), true, 1, 20, new System.Object[]{message}, "MESSAGE CONTROL ID");
       this.add(typeof(ID), true, 1, 1, new System.Object[]{message, 103}, "PROCESSING ID");
       this.add(typeof(NM), true, 1, 8, new System.Object[]{message}, "VERSION ID");
       this.add(typeof(NM), false, 1, 15, new System.Object[]{message}, "SEQUENCE NUMBER");
       this.add(typeof(ST), false, 1, 180, new System.Object[]{message}, "CONTINUATION POINTER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns FIELD SEPARATOR(MSH-1).
	///</summary>
	public ST FIELDSEPARATOR
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ENCODING CHARACTERS(MSH-2).
	///</summary>
	public ST ENCODINGCHARACTERS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SENDING APPLICATION(MSH-3).
	///</summary>
	public ST SENDINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SENDING FACILITY(MSH-4).
	///</summary>
	public ST SENDINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RECEIVING APPLICATION(MSH-5).
	///</summary>
	public ST RECEIVINGAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RECEIVING FACILITY(MSH-6).
	///</summary>
	public ST RECEIVINGFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE/TIME OF MESSAGE(MSH-7).
	///</summary>
	public TS DATETIMEOFMESSAGE
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns Security(MSH-8).
	///</summary>
	public ST Security
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MESSAGE TYPE(MSH-9).
	///</summary>
	public ID MESSAGETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MESSAGE CONTROL ID(MSH-10).
	///</summary>
	public ST MESSAGECONTROLID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCESSING ID(MSH-11).
	///</summary>
	public ID PROCESSINGID
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VERSION ID(MSH-12).
	///</summary>
	public NM VERSIONID
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SEQUENCE NUMBER(MSH-13).
	///</summary>
	public NM SEQUENCENUMBER
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CONTINUATION POINTER(MSH-14).
	///</summary>
	public ST CONTINUATIONPOINTER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\NCK.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NCK message segment. 
/// This segment has the following fields:<ol>
///<li>NCK-1: SYSTEM DATE/TIME (TS)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NCK : AbstractSegment  {

  /**
   * Creates a NCK (SYSTEM CLOCK) segment object that belongs to the given 
   * message.  
   */
	public NCK(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "SYSTEM DATE/TIME");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SYSTEM DATE/TIME(NCK-1).
	///</summary>
	public TS SYSTEMDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\NK1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NK1 message segment. 
/// This segment has the following fields:<ol>
///<li>NK1-1: SET ID - NEXT OF KIN (SI)</li>
///<li>NK1-2: NEXT OF KIN NAME (PN)</li>
///<li>NK1-3: NEXT OF KIN RELATIONSHIP (ST)</li>
///<li>NK1-4: NEXT OF KIN - ADDRESS (AD)</li>
///<li>NK1-5: NEXT OF KIN - PHONE NUMBER (TN)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NK1 : AbstractSegment  {

  /**
   * Creates a NK1 (NEXT OF KIN) segment object that belongs to the given 
   * message.  
   */
	public NK1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), true, 1, 4, new System.Object[]{message}, "SET ID - NEXT OF KIN");
       this.add(typeof(PN), false, 1, 48, new System.Object[]{message}, "NEXT OF KIN NAME");
       this.add(typeof(ST), false, 1, 15, new System.Object[]{message}, "NEXT OF KIN RELATIONSHIP");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "NEXT OF KIN - ADDRESS");
       this.add(typeof(TN), false, 0, 40, new System.Object[]{message}, "NEXT OF KIN - PHONE NUMBER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - NEXT OF KIN(NK1-1).
	///</summary>
	public SI SETIDNEXTOFKIN
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEXT OF KIN NAME(NK1-2).
	///</summary>
	public PN NEXTOFKINNAME
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEXT OF KIN RELATIONSHIP(NK1-3).
	///</summary>
	public ST NEXTOFKINRELATIONSHIP
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEXT OF KIN - ADDRESS(NK1-4).
	///</summary>
	public AD NEXTOFKINADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of NEXT OF KIN - PHONE NUMBER(NK1-5).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TN GetNEXTOFKINPHONENUMBER(int rep)
	{
			TN ret = null;
			try
			{
			IType t = this.GetField(5, rep);
				ret = (TN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of NEXT OF KIN - PHONE NUMBER (NK1-5).
   ///</summary>
  public TN[] GetNEXTOFKINPHONENUMBER() {
     TN[] ret = null;
    try {
        IType[] t = this.GetField(5);  
        ret = new TN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of NEXT OF KIN - PHONE NUMBER (NK1-5).
   ///</summary>
  public int NEXTOFKINPHONENUMBERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(5);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\NPU.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NPU message segment. 
/// This segment has the following fields:<ol>
///<li>NPU-1: BED LOCATION (ID)</li>
///<li>NPU-2: BED STATUS (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NPU : AbstractSegment  {

  /**
   * Creates a NPU (NON-PATIENT UPDATE) segment object that belongs to the given 
   * message.  
   */
	public NPU(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 1, 12, new System.Object[]{message, 79}, "BED LOCATION");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 116}, "BED STATUS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns BED LOCATION(NPU-1).
	///</summary>
	public ID BEDLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BED STATUS(NPU-2).
	///</summary>
	public ID BEDSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\NSC.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NSC message segment. 
/// This segment has the following fields:<ol>
///<li>NSC-1: NETWORK CHANGE TYPE (ID)</li>
///<li>NSC-2: CURRENT CPU (ST)</li>
///<li>NSC-3: CURRENT FILESERVER (ST)</li>
///<li>NSC-4: CURRENT APPLICATION (ST)</li>
///<li>NSC-5: CURRENT FACILITY (ST)</li>
///<li>NSC-6: NEW CPU (ST)</li>
///<li>NSC-7: NEW FILESERVER (ST)</li>
///<li>NSC-8: NEW APPLICATION (ST)</li>
///<li>NSC-9: NEW FACILITY (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NSC : AbstractSegment  {

  /**
   * Creates a NSC (STATUS CHANGE) segment object that belongs to the given 
   * message.  
   */
	public NSC(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 1, 4, new System.Object[]{message, 0}, "NETWORK CHANGE TYPE");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "CURRENT CPU");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "CURRENT FILESERVER");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "CURRENT APPLICATION");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "CURRENT FACILITY");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "NEW CPU");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "NEW FILESERVER");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "NEW APPLICATION");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "NEW FACILITY");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns NETWORK CHANGE TYPE(NSC-1).
	///</summary>
	public ID NETWORKCHANGETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CURRENT CPU(NSC-2).
	///</summary>
	public ST CURRENTCPU
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CURRENT FILESERVER(NSC-3).
	///</summary>
	public ST CURRENTFILESERVER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CURRENT APPLICATION(NSC-4).
	///</summary>
	public ST CURRENTAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CURRENT FACILITY(NSC-5).
	///</summary>
	public ST CURRENTFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEW CPU(NSC-6).
	///</summary>
	public ST NEWCPU
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEW FILESERVER(NSC-7).
	///</summary>
	public ST NEWFILESERVER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEW APPLICATION(NSC-8).
	///</summary>
	public ST NEWAPPLICATION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NEW FACILITY(NSC-9).
	///</summary>
	public ST NEWFACILITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\NST.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NST message segment. 
/// This segment has the following fields:<ol>
///<li>NST-1: STATISTICS AVAILABLE (ID)</li>
///<li>NST-2: SOURCE IDENTIFIER (ST)</li>
///<li>NST-3: SOURCE TYPE (ID)</li>
///<li>NST-4: STATISTICS START (TS)</li>
///<li>NST-5: STATISTICS END (TS)</li>
///<li>NST-6: RECEIVE CHARACTER COUNT (NM)</li>
///<li>NST-7: SEND CHARACTER COUNT (NM)</li>
///<li>NST-8: MESSAGES RECEIVED (NM)</li>
///<li>NST-9: MESSAGES SENT (NM)</li>
///<li>NST-10: CHECKSUM ERRORS RECEIVED (NM)</li>
///<li>NST-11: LENGTH ERRORS RECEIVED (NM)</li>
///<li>NST-12: OTHER ERRORS RECEIVED (NM)</li>
///<li>NST-13: CONNECT TIMEOUTS (NM)</li>
///<li>NST-14: RECEIVE TIMEOUTS (NM)</li>
///<li>NST-15: NETWORK ERRORS (NM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NST : AbstractSegment  {

  /**
   * Creates a NST (STATISTICS) segment object that belongs to the given 
   * message.  
   */
	public NST(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ID), true, 1, 1, new System.Object[]{message, 0}, "STATISTICS AVAILABLE");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "SOURCE IDENTIFIER");
       this.add(typeof(ID), false, 1, 3, new System.Object[]{message, 0}, "SOURCE TYPE");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "STATISTICS START");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "STATISTICS END");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "RECEIVE CHARACTER COUNT");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "SEND CHARACTER COUNT");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "MESSAGES RECEIVED");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "MESSAGES SENT");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "CHECKSUM ERRORS RECEIVED");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "LENGTH ERRORS RECEIVED");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "OTHER ERRORS RECEIVED");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "CONNECT TIMEOUTS");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "RECEIVE TIMEOUTS");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "NETWORK ERRORS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns STATISTICS AVAILABLE(NST-1).
	///</summary>
	public ID STATISTICSAVAILABLE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SOURCE IDENTIFIER(NST-2).
	///</summary>
	public ST SOURCEIDENTIFIER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SOURCE TYPE(NST-3).
	///</summary>
	public ID SOURCETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns STATISTICS START(NST-4).
	///</summary>
	public TS STATISTICSSTART
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns STATISTICS END(NST-5).
	///</summary>
	public TS STATISTICSEND
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RECEIVE CHARACTER COUNT(NST-6).
	///</summary>
	public NM RECEIVECHARACTERCOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SEND CHARACTER COUNT(NST-7).
	///</summary>
	public NM SENDCHARACTERCOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MESSAGES RECEIVED(NST-8).
	///</summary>
	public NM MESSAGESRECEIVED
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MESSAGES SENT(NST-9).
	///</summary>
	public NM MESSAGESSENT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CHECKSUM ERRORS RECEIVED(NST-10).
	///</summary>
	public NM CHECKSUMERRORSRECEIVED
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns LENGTH ERRORS RECEIVED(NST-11).
	///</summary>
	public NM LENGTHERRORSRECEIVED
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OTHER ERRORS RECEIVED(NST-12).
	///</summary>
	public NM OTHERERRORSRECEIVED
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CONNECT TIMEOUTS(NST-13).
	///</summary>
	public NM CONNECTTIMEOUTS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RECEIVE TIMEOUTS(NST-14).
	///</summary>
	public NM RECEIVETIMEOUTS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NETWORK ERRORS(NST-15).
	///</summary>
	public NM NETWORKERRORS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\NTE.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 NTE message segment. 
/// This segment has the following fields:<ol>
///<li>NTE-1: SET ID - NOTES AND COMMENTS (SI)</li>
///<li>NTE-2: SOURCE OF COMMENT (ID)</li>
///<li>NTE-3: COMMENT (TX)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class NTE : AbstractSegment  {

  /**
   * Creates a NTE (NOTES AND COMMENTS) segment object that belongs to the given 
   * message.  
   */
	public NTE(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - NOTES AND COMMENTS");
       this.add(typeof(ID), false, 1, 8, new System.Object[]{message, 105}, "SOURCE OF COMMENT");
       this.add(typeof(TX), true, 0, 120, new System.Object[]{message}, "COMMENT");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - NOTES AND COMMENTS(NTE-1).
	///</summary>
	public SI SETIDNOTESANDCOMMENTS
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SOURCE OF COMMENT(NTE-2).
	///</summary>
	public ID SOURCEOFCOMMENT
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of COMMENT(NTE-3).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TX GetCOMMENT(int rep)
	{
			TX ret = null;
			try
			{
			IType t = this.GetField(3, rep);
				ret = (TX)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of COMMENT (NTE-3).
   ///</summary>
  public TX[] GetCOMMENT() {
     TX[] ret = null;
    try {
        IType[] t = this.GetField(3);  
        ret = new TX[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TX)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of COMMENT (NTE-3).
   ///</summary>
  public int COMMENTRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(3);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\OBR.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 OBR message segment. 
/// This segment has the following fields:<ol>
///<li>OBR-1: SET ID - OBSERVATION REQUEST (SI)</li>
///<li>OBR-2: PLACER ORDER # (CM)</li>
///<li>OBR-3: FILLER ORDER # (CM)</li>
///<li>OBR-4: UNIVERSAL SERVICE IDENT. (CE)</li>
///<li>OBR-5: PRIORITY (ST)</li>
///<li>OBR-6: REQUESTED DATE-TIME (TS)</li>
///<li>OBR-7: OBSERVATION DATE/TIME (TS)</li>
///<li>OBR-8: OBSERVATION END DATE/TIME (TS)</li>
///<li>OBR-9: COLLECTION VOLUME (CQ)</li>
///<li>OBR-10: COLLECTOR IDENTIFIER (CN)</li>
///<li>OBR-11: SPECIMEN ACTION CODE (ST)</li>
///<li>OBR-12: DANGER CODE (CM)</li>
///<li>OBR-13: RELEVANT CLINICAL INFO. (ST)</li>
///<li>OBR-14: SPECIMEN RECEIVED DATE/TIME (TS)</li>
///<li>OBR-15: SPECIMEN SOURCE (CM)</li>
///<li>OBR-16: ORDERING PROVIDER (CN)</li>
///<li>OBR-17: ORDER CALL-BACK PHONE NUM (TN)</li>
///<li>OBR-18: PLACERS FIELD #1 (ST)</li>
///<li>OBR-19: PLACERS FIELD #2 (ST)</li>
///<li>OBR-20: FILLERS FIELD #1 (ST)</li>
///<li>OBR-21: FILLERS FIELD #2 (ST)</li>
///<li>OBR-22: RESULTS RPT/STATUS CHNG - DATE/T (TS)</li>
///<li>OBR-23: CHARGE TO PRACTICE (CM)</li>
///<li>OBR-24: DIAGNOSTIC SERV SECT ID (ID)</li>
///<li>OBR-25: RESULT STATUS (ID)</li>
///<li>OBR-26: LINKED RESULTS (CE)</li>
///<li>OBR-27: QUANTITY/TIMING (CM)</li>
///<li>OBR-28: RESULT COPIES TO (CN)</li>
///<li>OBR-29: PARENT ACCESSION # (CM)</li>
///<li>OBR-30: TRANSPORTATION MODE (ID)</li>
///<li>OBR-31: REASON FOR STUDY (CE)</li>
///<li>OBR-32: PRINCIPAL RESULT INTERPRETER (CN)</li>
///<li>OBR-33: ASSISTANT RESULT INTERPRETER (CN)</li>
///<li>OBR-34: TECHNICIAN (CN)</li>
///<li>OBR-35: TRANSCRIPTIONIST (CN)</li>
///<li>OBR-36: SCHEDULED - DATE/TIME (TS)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class OBR : AbstractSegment  {

  /**
   * Creates a OBR (OBSERVATION REQUEST) segment object that belongs to the given 
   * message.  
   */
	public OBR(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - OBSERVATION REQUEST");
       this.add(typeof(CM), false, 1, 75, new System.Object[]{message}, "PLACER ORDER #");
       this.add(typeof(CM), false, 1, 75, new System.Object[]{message}, "FILLER ORDER #");
       this.add(typeof(CE), true, 1, 200, new System.Object[]{message}, "UNIVERSAL SERVICE IDENT.");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "PRIORITY");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "REQUESTED DATE-TIME");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "OBSERVATION DATE/TIME");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "OBSERVATION END DATE/TIME");
       this.add(typeof(CQ), true, 1, 20, new System.Object[]{message}, "COLLECTION VOLUME");
       this.add(typeof(CN), false, 0, 60, new System.Object[]{message}, "COLLECTOR IDENTIFIER");
       this.add(typeof(ST), false, 1, 1, new System.Object[]{message}, "SPECIMEN ACTION CODE");
       this.add(typeof(CM), false, 1, 60, new System.Object[]{message}, "DANGER CODE");
       this.add(typeof(ST), false, 1, 300, new System.Object[]{message}, "RELEVANT CLINICAL INFO.");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "SPECIMEN RECEIVED DATE/TIME");
       this.add(typeof(CM), false, 1, 300, new System.Object[]{message}, "SPECIMEN SOURCE");
       this.add(typeof(CN), false, 0, 60, new System.Object[]{message}, "ORDERING PROVIDER");
       this.add(typeof(TN), false, 2, 40, new System.Object[]{message}, "ORDER CALL-BACK PHONE NUM");
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "PLACERS FIELD #1");
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "PLACERS FIELD #2");
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "FILLERS FIELD #1");
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "FILLERS FIELD #2");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "RESULTS RPT/STATUS CHNG - DATE/T");
       this.add(typeof(CM), false, 1, 40, new System.Object[]{message}, "CHARGE TO PRACTICE");
       this.add(typeof(ID), false, 1, 10, new System.Object[]{message, 74}, "DIAGNOSTIC SERV SECT ID");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 123}, "RESULT STATUS");
       this.add(typeof(CE), false, 1, 200, new System.Object[]{message}, "LINKED RESULTS");
       this.add(typeof(CM), false, 0, 200, new System.Object[]{message}, "QUANTITY/TIMING");
       this.add(typeof(CN), false, 5, 80, new System.Object[]{message}, "RESULT COPIES TO");
       this.add(typeof(CM), false, 1, 150, new System.Object[]{message}, "PARENT ACCESSION #");
       this.add(typeof(ID), false, 1, 20, new System.Object[]{message, 124}, "TRANSPORTATION MODE");
       this.add(typeof(CE), false, 0, 300, new System.Object[]{message}, "REASON FOR STUDY");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "PRINCIPAL RESULT INTERPRETER");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "ASSISTANT RESULT INTERPRETER");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "TECHNICIAN");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "TRANSCRIPTIONIST");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "SCHEDULED - DATE/TIME");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - OBSERVATION REQUEST(OBR-1).
	///</summary>
	public SI SETIDOBSERVATIONREQUEST
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLACER ORDER #(OBR-2).
	///</summary>
	public CM PLACERORDER
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILLER ORDER #(OBR-3).
	///</summary>
	public CM FILLERORDER
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UNIVERSAL SERVICE IDENT.(OBR-4).
	///</summary>
	public CE UNIVERSALSERVICEIDENT
	{
		get{
			CE ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (CE)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRIORITY(OBR-5).
	///</summary>
	public ST PRIORITY
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REQUESTED DATE-TIME(OBR-6).
	///</summary>
	public TS REQUESTEDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERVATION DATE/TIME(OBR-7).
	///</summary>
	public TS OBSERVATIONDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERVATION END DATE/TIME(OBR-8).
	///</summary>
	public TS OBSERVATIONENDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COLLECTION VOLUME(OBR-9).
	///</summary>
	public CQ COLLECTIONVOLUME
	{
		get{
			CQ ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (CQ)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of COLLECTOR IDENTIFIER(OBR-10).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CN GetCOLLECTORIDENTIFIER(int rep)
	{
			CN ret = null;
			try
			{
			IType t = this.GetField(10, rep);
				ret = (CN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of COLLECTOR IDENTIFIER (OBR-10).
   ///</summary>
  public CN[] GetCOLLECTORIDENTIFIER() {
     CN[] ret = null;
    try {
        IType[] t = this.GetField(10);  
        ret = new CN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of COLLECTOR IDENTIFIER (OBR-10).
   ///</summary>
  public int COLLECTORIDENTIFIERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(10);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns SPECIMEN ACTION CODE(OBR-11).
	///</summary>
	public ST SPECIMENACTIONCODE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DANGER CODE(OBR-12).
	///</summary>
	public CM DANGERCODE
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RELEVANT CLINICAL INFO.(OBR-13).
	///</summary>
	public ST RELEVANTCLINICALINFO
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SPECIMEN RECEIVED DATE/TIME(OBR-14).
	///</summary>
	public TS SPECIMENRECEIVEDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SPECIMEN SOURCE(OBR-15).
	///</summary>
	public CM SPECIMENSOURCE
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of ORDERING PROVIDER(OBR-16).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CN GetORDERINGPROVIDER(int rep)
	{
			CN ret = null;
			try
			{
			IType t = this.GetField(16, rep);
				ret = (CN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of ORDERING PROVIDER (OBR-16).
   ///</summary>
  public CN[] GetORDERINGPROVIDER() {
     CN[] ret = null;
    try {
        IType[] t = this.GetField(16);  
        ret = new CN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of ORDERING PROVIDER (OBR-16).
   ///</summary>
  public int ORDERINGPROVIDERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(16);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of ORDER CALL-BACK PHONE NUM(OBR-17).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TN GetORDERCALLBACKPHONENUM(int rep)
	{
			TN ret = null;
			try
			{
			IType t = this.GetField(17, rep);
				ret = (TN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of ORDER CALL-BACK PHONE NUM (OBR-17).
   ///</summary>
  public TN[] GetORDERCALLBACKPHONENUM() {
     TN[] ret = null;
    try {
        IType[] t = this.GetField(17);  
        ret = new TN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of ORDER CALL-BACK PHONE NUM (OBR-17).
   ///</summary>
  public int ORDERCALLBACKPHONENUMRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(17);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PLACERS FIELD #1(OBR-18).
	///</summary>
	public ST PLACERSFIELD1
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLACERS FIELD #2(OBR-19).
	///</summary>
	public ST PLACERSFIELD2
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILLERS FIELD #1(OBR-20).
	///</summary>
	public ST FILLERSFIELD1
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILLERS FIELD #2(OBR-21).
	///</summary>
	public ST FILLERSFIELD2
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RESULTS RPT/STATUS CHNG - DATE/T(OBR-22).
	///</summary>
	public TS RESULTSRPTSTATUSCHNGDATET
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CHARGE TO PRACTICE(OBR-23).
	///</summary>
	public CM CHARGETOPRACTICE
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(23, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIAGNOSTIC SERV SECT ID(OBR-24).
	///</summary>
	public ID DIAGNOSTICSERVSECTID
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(24, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RESULT STATUS(OBR-25).
	///</summary>
	public ID RESULTSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(25, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns LINKED RESULTS(OBR-26).
	///</summary>
	public CE LINKEDRESULTS
	{
		get{
			CE ret = null;
			try
			{
			IType t = this.GetField(26, 0);
				ret = (CE)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of QUANTITY/TIMING(OBR-27).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CM GetQUANTITYTIMING(int rep)
	{
			CM ret = null;
			try
			{
			IType t = this.GetField(27, rep);
				ret = (CM)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of QUANTITY/TIMING (OBR-27).
   ///</summary>
  public CM[] GetQUANTITYTIMING() {
     CM[] ret = null;
    try {
        IType[] t = this.GetField(27);  
        ret = new CM[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CM)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of QUANTITY/TIMING (OBR-27).
   ///</summary>
  public int QUANTITYTIMINGRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(27);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of RESULT COPIES TO(OBR-28).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CN GetRESULTCOPIESTO(int rep)
	{
			CN ret = null;
			try
			{
			IType t = this.GetField(28, rep);
				ret = (CN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of RESULT COPIES TO (OBR-28).
   ///</summary>
  public CN[] GetRESULTCOPIESTO() {
     CN[] ret = null;
    try {
        IType[] t = this.GetField(28);  
        ret = new CN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of RESULT COPIES TO (OBR-28).
   ///</summary>
  public int RESULTCOPIESTORepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(28);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PARENT ACCESSION #(OBR-29).
	///</summary>
	public CM PARENTACCESSION
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(29, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSPORTATION MODE(OBR-30).
	///</summary>
	public ID TRANSPORTATIONMODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(30, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of REASON FOR STUDY(OBR-31).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CE GetREASONFORSTUDY(int rep)
	{
			CE ret = null;
			try
			{
			IType t = this.GetField(31, rep);
				ret = (CE)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of REASON FOR STUDY (OBR-31).
   ///</summary>
  public CE[] GetREASONFORSTUDY() {
     CE[] ret = null;
    try {
        IType[] t = this.GetField(31);  
        ret = new CE[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CE)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of REASON FOR STUDY (OBR-31).
   ///</summary>
  public int REASONFORSTUDYRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(31);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PRINCIPAL RESULT INTERPRETER(OBR-32).
	///</summary>
	public CN PRINCIPALRESULTINTERPRETER
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(32, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ASSISTANT RESULT INTERPRETER(OBR-33).
	///</summary>
	public CN ASSISTANTRESULTINTERPRETER
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(33, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TECHNICIAN(OBR-34).
	///</summary>
	public CN TECHNICIAN
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(34, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSCRIPTIONIST(OBR-35).
	///</summary>
	public CN TRANSCRIPTIONIST
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(35, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SCHEDULED - DATE/TIME(OBR-36).
	///</summary>
	public TS SCHEDULEDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(36, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\OBX.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 OBX message segment. 
/// This segment has the following fields:<ol>
///<li>OBX-1: SET ID - OBSERVATION SIMPLE (SI)</li>
///<li>OBX-2: VALUE TYPE (ID)</li>
///<li>OBX-3: OBSERVATION IDENTIFIER (CE)</li>
///<li>OBX-4: OBSERVATION SUB-ID (NM)</li>
///<li>OBX-5: OBSERVATION RESULTS (ST)</li>
///<li>OBX-6: UNITS (ID)</li>
///<li>OBX-7: REFERENCES RANGE (ST)</li>
///<li>OBX-8: ABNORMAL FLAGS (ST)</li>
///<li>OBX-9: PROBABILITY (NM)</li>
///<li>OBX-10: NATURE OF ABNORMAL TEST (ID)</li>
///<li>OBX-11: OBSERV RESULT STATUS (ID)</li>
///<li>OBX-12: DATE LAST OBS NORMAL VALUES (TS)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class OBX : AbstractSegment  {

  /**
   * Creates a OBX (RESULT) segment object that belongs to the given 
   * message.  
   */
	public OBX(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - OBSERVATION SIMPLE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 125}, "VALUE TYPE");
       this.add(typeof(CE), true, 1, 80, new System.Object[]{message}, "OBSERVATION IDENTIFIER");
       this.add(typeof(NM), false, 1, 20, new System.Object[]{message}, "OBSERVATION SUB-ID");
       this.add(typeof(ST), true, 1, 65, new System.Object[]{message}, "OBSERVATION RESULTS");
       this.add(typeof(ID), false, 1, 20, new System.Object[]{message, 0}, "UNITS");
       this.add(typeof(ST), false, 1, 60, new System.Object[]{message}, "REFERENCES RANGE");
       this.add(typeof(ST), false, 5, 10, new System.Object[]{message}, "ABNORMAL FLAGS");
       this.add(typeof(NM), false, 1, 5, new System.Object[]{message}, "PROBABILITY");
       this.add(typeof(ID), false, 1, 5, new System.Object[]{message, 80}, "NATURE OF ABNORMAL TEST");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 85}, "OBSERV RESULT STATUS");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DATE LAST OBS NORMAL VALUES");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - OBSERVATION SIMPLE(OBX-1).
	///</summary>
	public SI SETIDOBSERVATIONSIMPLE
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VALUE TYPE(OBX-2).
	///</summary>
	public ID VALUETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERVATION IDENTIFIER(OBX-3).
	///</summary>
	public CE OBSERVATIONIDENTIFIER
	{
		get{
			CE ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CE)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERVATION SUB-ID(OBX-4).
	///</summary>
	public NM OBSERVATIONSUBID
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERVATION RESULTS(OBX-5).
	///</summary>
	public ST OBSERVATIONRESULTS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UNITS(OBX-6).
	///</summary>
	public ID UNITS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REFERENCES RANGE(OBX-7).
	///</summary>
	public ST REFERENCESRANGE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of ABNORMAL FLAGS(OBX-8).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetABNORMALFLAGS(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of ABNORMAL FLAGS (OBX-8).
   ///</summary>
  public ST[] GetABNORMALFLAGS() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(8);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of ABNORMAL FLAGS (OBX-8).
   ///</summary>
  public int ABNORMALFLAGSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(8);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PROBABILITY(OBX-9).
	///</summary>
	public NM PROBABILITY
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NATURE OF ABNORMAL TEST(OBX-10).
	///</summary>
	public ID NATUREOFABNORMALTEST
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OBSERV RESULT STATUS(OBX-11).
	///</summary>
	public ID OBSERVRESULTSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE LAST OBS NORMAL VALUES(OBX-12).
	///</summary>
	public TS DATELASTOBSNORMALVALUES
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\ORC.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 ORC message segment. 
/// This segment has the following fields:<ol>
///<li>ORC-1: ORDER CONTROL (ST)</li>
///<li>ORC-2: PLACER ORDER # (CM)</li>
///<li>ORC-3: FILLER ORDER # (CM)</li>
///<li>ORC-4: PLACER GROUP # (CM)</li>
///<li>ORC-5: ORDER STATUS (ST)</li>
///<li>ORC-6: RESPONSE FLAG (ST)</li>
///<li>ORC-7: TIMING/QUANTITY (CM)</li>
///<li>ORC-8: PARENT (CM)</li>
///<li>ORC-9: DATE/TIME OF TRANSACTION (TS)</li>
///<li>ORC-10: ENTERED BY (CN)</li>
///<li>ORC-11: VERIFIED BY (CN)</li>
///<li>ORC-12: ORDERING PROVIDER (CN)</li>
///<li>ORC-13: ENTERER'S LOCATION (CM)</li>
///<li>ORC-14: CALL BACK PHONE NUMBER (TN)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class ORC : AbstractSegment  {

  /**
   * Creates a ORC (COMMON ORDER) segment object that belongs to the given 
   * message.  
   */
	public ORC(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 1, 2, new System.Object[]{message}, "ORDER CONTROL");
       this.add(typeof(CM), false, 1, 75, new System.Object[]{message}, "PLACER ORDER #");
       this.add(typeof(CM), false, 1, 75, new System.Object[]{message}, "FILLER ORDER #");
       this.add(typeof(CM), false, 1, 75, new System.Object[]{message}, "PLACER GROUP #");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "ORDER STATUS");
       this.add(typeof(ST), false, 1, 1, new System.Object[]{message}, "RESPONSE FLAG");
       this.add(typeof(CM), false, 1, 200, new System.Object[]{message}, "TIMING/QUANTITY");
       this.add(typeof(CM), false, 1, 200, new System.Object[]{message}, "PARENT");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DATE/TIME OF TRANSACTION");
       this.add(typeof(CN), false, 1, 80, new System.Object[]{message}, "ENTERED BY");
       this.add(typeof(CN), false, 1, 80, new System.Object[]{message}, "VERIFIED BY");
       this.add(typeof(CN), false, 1, 80, new System.Object[]{message}, "ORDERING PROVIDER");
       this.add(typeof(CM), false, 1, 80, new System.Object[]{message}, "ENTERER'S LOCATION");
       this.add(typeof(TN), false, 2, 40, new System.Object[]{message}, "CALL BACK PHONE NUMBER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ORDER CONTROL(ORC-1).
	///</summary>
	public ST ORDERCONTROL
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLACER ORDER #(ORC-2).
	///</summary>
	public CM PLACERORDER
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FILLER ORDER #(ORC-3).
	///</summary>
	public CM FILLERORDER
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PLACER GROUP #(ORC-4).
	///</summary>
	public CM PLACERGROUP
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ORDER STATUS(ORC-5).
	///</summary>
	public ST ORDERSTATUS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RESPONSE FLAG(ORC-6).
	///</summary>
	public ST RESPONSEFLAG
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TIMING/QUANTITY(ORC-7).
	///</summary>
	public CM TIMINGQUANTITY
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PARENT(ORC-8).
	///</summary>
	public CM PARENT
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE/TIME OF TRANSACTION(ORC-9).
	///</summary>
	public TS DATETIMEOFTRANSACTION
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ENTERED BY(ORC-10).
	///</summary>
	public CN ENTEREDBY
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VERIFIED BY(ORC-11).
	///</summary>
	public CN VERIFIEDBY
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ORDERING PROVIDER(ORC-12).
	///</summary>
	public CN ORDERINGPROVIDER
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ENTERER'S LOCATION(ORC-13).
	///</summary>
	public CM ENTERERSLOCATION
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of CALL BACK PHONE NUMBER(ORC-14).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TN GetCALLBACKPHONENUMBER(int rep)
	{
			TN ret = null;
			try
			{
			IType t = this.GetField(14, rep);
				ret = (TN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CALL BACK PHONE NUMBER (ORC-14).
   ///</summary>
  public TN[] GetCALLBACKPHONENUMBER() {
     TN[] ret = null;
    try {
        IType[] t = this.GetField(14);  
        ret = new TN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CALL BACK PHONE NUMBER (ORC-14).
   ///</summary>
  public int CALLBACKPHONENUMBERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(14);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\ORO.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 ORO message segment. 
/// This segment has the following fields:<ol>
///<li>ORO-1: ORDER ITEM ID (CE)</li>
///<li>ORO-2: SUBSTITUTE ALLOWED (ID)</li>
///<li>ORO-3: RESULTS COPIES TO (CN)</li>
///<li>ORO-4: STOCK LOCATION (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class ORO : AbstractSegment  {

  /**
   * Creates a ORO (ORDER OTHER) segment object that belongs to the given 
   * message.  
   */
	public ORO(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(CE), false, 1, 200, new System.Object[]{message}, "ORDER ITEM ID");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 0}, "SUBSTITUTE ALLOWED");
       this.add(typeof(CN), false, 0, 80, new System.Object[]{message}, "RESULTS COPIES TO");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 12}, "STOCK LOCATION");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ORDER ITEM ID(ORO-1).
	///</summary>
	public CE ORDERITEMID
	{
		get{
			CE ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (CE)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SUBSTITUTE ALLOWED(ORO-2).
	///</summary>
	public ID SUBSTITUTEALLOWED
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of RESULTS COPIES TO(ORO-3).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CN GetRESULTSCOPIESTO(int rep)
	{
			CN ret = null;
			try
			{
			IType t = this.GetField(3, rep);
				ret = (CN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of RESULTS COPIES TO (ORO-3).
   ///</summary>
  public CN[] GetRESULTSCOPIESTO() {
     CN[] ret = null;
    try {
        IType[] t = this.GetField(3);  
        ret = new CN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of RESULTS COPIES TO (ORO-3).
   ///</summary>
  public int RESULTSCOPIESTORepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(3);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns STOCK LOCATION(ORO-4).
	///</summary>
	public ID STOCKLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\PD1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 PD1 message segment. 
/// This segment has the following fields:<ol>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class PD1 : AbstractSegment  {

  /**
   * Creates a PD1 () segment object that belongs to the given 
   * message.  
   */
	public PD1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\PID.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 PID message segment. 
/// This segment has the following fields:<ol>
///<li>PID-1: SET ID - PATIENT ID (SI)</li>
///<li>PID-2: PATIENT ID EXTERNAL (EXTERNAL ID) (CK)</li>
///<li>PID-3: PATIENT ID INTERNAL (INTERNAL ID) (CK)</li>
///<li>PID-4: ALTERNATE PATIENT ID (ST)</li>
///<li>PID-5: PATIENT NAME (PN)</li>
///<li>PID-6: MOTHER'S MAIDEN NAME (ST)</li>
///<li>PID-7: DATE OF BIRTH (DT)</li>
///<li>PID-8: SEX (ID)</li>
///<li>PID-9: PATIENT ALIAS (PN)</li>
///<li>PID-10: ETHNIC GROUP (ID)</li>
///<li>PID-11: PATIENT ADDRESS (AD)</li>
///<li>PID-12: COUNTY CODE (ID)</li>
///<li>PID-13: PHONE NUMBER - HOME (TN)</li>
///<li>PID-14: PHONE NUMBER - BUSINESS (TN)</li>
///<li>PID-15: LANGUAGE - PATIENT (ST)</li>
///<li>PID-16: MARITAL STATUS (ID)</li>
///<li>PID-17: RELIGION (ID)</li>
///<li>PID-18: PATIENT ACCOUNT NUMBER (CK)</li>
///<li>PID-19: SSN NUMBER - PATIENT (ST)</li>
///<li>PID-20: DRIVER'S LIC NUM - PATIENT (CM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class PID : AbstractSegment  {

  /**
   * Creates a PID (PATIENT IDENTIFICATION) segment object that belongs to the given 
   * message.  
   */
	public PID(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - PATIENT ID");
       this.add(typeof(CK), false, 1, 16, new System.Object[]{message}, "PATIENT ID EXTERNAL (EXTERNAL ID)");
       this.add(typeof(CK), true, 1, 16, new System.Object[]{message}, "PATIENT ID INTERNAL (INTERNAL ID)");
       this.add(typeof(ST), false, 1, 12, new System.Object[]{message}, "ALTERNATE PATIENT ID");
       this.add(typeof(PN), true, 1, 48, new System.Object[]{message}, "PATIENT NAME");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "MOTHER'S MAIDEN NAME");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "DATE OF BIRTH");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 1}, "SEX");
       this.add(typeof(PN), false, 0, 48, new System.Object[]{message}, "PATIENT ALIAS");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 5}, "ETHNIC GROUP");
       this.add(typeof(AD), false, 1, 106, new System.Object[]{message}, "PATIENT ADDRESS");
       this.add(typeof(ID), false, 1, 4, new System.Object[]{message, 0}, "COUNTY CODE");
       this.add(typeof(TN), false, 3, 40, new System.Object[]{message}, "PHONE NUMBER - HOME");
       this.add(typeof(TN), false, 3, 40, new System.Object[]{message}, "PHONE NUMBER - BUSINESS");
       this.add(typeof(ST), false, 1, 25, new System.Object[]{message}, "LANGUAGE - PATIENT");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 2}, "MARITAL STATUS");
       this.add(typeof(ID), false, 1, 3, new System.Object[]{message, 6}, "RELIGION");
       this.add(typeof(CK), false, 1, 20, new System.Object[]{message}, "PATIENT ACCOUNT NUMBER");
       this.add(typeof(ST), false, 1, 16, new System.Object[]{message}, "SSN NUMBER - PATIENT");
       this.add(typeof(CM), false, 1, 25, new System.Object[]{message}, "DRIVER'S LIC NUM - PATIENT");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - PATIENT ID(PID-1).
	///</summary>
	public SI SETIDPATIENTID
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT ID EXTERNAL (EXTERNAL ID)(PID-2).
	///</summary>
	public CK PATIENTIDEXTERNALEXTERNALID
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT ID INTERNAL (INTERNAL ID)(PID-3).
	///</summary>
	public CK PATIENTIDINTERNALINTERNALID
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ALTERNATE PATIENT ID(PID-4).
	///</summary>
	public ST ALTERNATEPATIENTID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT NAME(PID-5).
	///</summary>
	public PN PATIENTNAME
	{
		get{
			PN ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (PN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MOTHER'S MAIDEN NAME(PID-6).
	///</summary>
	public ST MOTHERSMAIDENNAME
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DATE OF BIRTH(PID-7).
	///</summary>
	public DT DATEOFBIRTH
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SEX(PID-8).
	///</summary>
	public ID SEX
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of PATIENT ALIAS(PID-9).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public PN GetPATIENTALIAS(int rep)
	{
			PN ret = null;
			try
			{
			IType t = this.GetField(9, rep);
				ret = (PN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of PATIENT ALIAS (PID-9).
   ///</summary>
  public PN[] GetPATIENTALIAS() {
     PN[] ret = null;
    try {
        IType[] t = this.GetField(9);  
        ret = new PN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (PN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of PATIENT ALIAS (PID-9).
   ///</summary>
  public int PATIENTALIASRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(9);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns ETHNIC GROUP(PID-10).
	///</summary>
	public ID ETHNICGROUP
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT ADDRESS(PID-11).
	///</summary>
	public AD PATIENTADDRESS
	{
		get{
			AD ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (AD)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COUNTY CODE(PID-12).
	///</summary>
	public ID COUNTYCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of PHONE NUMBER - HOME(PID-13).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TN GetPHONENUMBERHOME(int rep)
	{
			TN ret = null;
			try
			{
			IType t = this.GetField(13, rep);
				ret = (TN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of PHONE NUMBER - HOME (PID-13).
   ///</summary>
  public TN[] GetPHONENUMBERHOME() {
     TN[] ret = null;
    try {
        IType[] t = this.GetField(13);  
        ret = new TN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of PHONE NUMBER - HOME (PID-13).
   ///</summary>
  public int PHONENUMBERHOMERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(13);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of PHONE NUMBER - BUSINESS(PID-14).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TN GetPHONENUMBERBUSINESS(int rep)
	{
			TN ret = null;
			try
			{
			IType t = this.GetField(14, rep);
				ret = (TN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of PHONE NUMBER - BUSINESS (PID-14).
   ///</summary>
  public TN[] GetPHONENUMBERBUSINESS() {
     TN[] ret = null;
    try {
        IType[] t = this.GetField(14);  
        ret = new TN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of PHONE NUMBER - BUSINESS (PID-14).
   ///</summary>
  public int PHONENUMBERBUSINESSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(14);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns LANGUAGE - PATIENT(PID-15).
	///</summary>
	public ST LANGUAGEPATIENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns MARITAL STATUS(PID-16).
	///</summary>
	public ID MARITALSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RELIGION(PID-17).
	///</summary>
	public ID RELIGION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT ACCOUNT NUMBER(PID-18).
	///</summary>
	public CK PATIENTACCOUNTNUMBER
	{
		get{
			CK ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (CK)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SSN NUMBER - PATIENT(PID-19).
	///</summary>
	public ST SSNNUMBERPATIENT
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRIVER'S LIC NUM - PATIENT(PID-20).
	///</summary>
	public CM DRIVERSLICNUMPATIENT
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\PR1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 PR1 message segment. 
/// This segment has the following fields:<ol>
///<li>PR1-1: SET ID - PROCEDURE (SI)</li>
///<li>PR1-2: PROCEDURE CODING METHOD. (ID)</li>
///<li>PR1-3: PROCEDURE CODE (ID)</li>
///<li>PR1-4: PROCEDURE DESCRIPTION (ST)</li>
///<li>PR1-5: PROCEDURE DATE/TIME (TS)</li>
///<li>PR1-6: PROCEDURE TYPE (ID)</li>
///<li>PR1-7: PROCEDURE MINUTES (NM)</li>
///<li>PR1-8: ANESTHESIOLOGIST (CN)</li>
///<li>PR1-9: ANESTHESIA CODE (ID)</li>
///<li>PR1-10: ANESTHESIA MINUTES (NM)</li>
///<li>PR1-11: SURGEON (CN)</li>
///<li>PR1-12: RESIDENT CODE (CN)</li>
///<li>PR1-13: CONSENT CODE (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class PR1 : AbstractSegment  {

  /**
   * Creates a PR1 (PROCEDURES) segment object that belongs to the given 
   * message.  
   */
	public PR1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), true, 0, 4, new System.Object[]{message}, "SET ID - PROCEDURE");
       this.add(typeof(ID), true, 1, 2, new System.Object[]{message, 89}, "PROCEDURE CODING METHOD.");
       this.add(typeof(ID), true, 1, 10, new System.Object[]{message, 88}, "PROCEDURE CODE");
       this.add(typeof(ST), false, 1, 40, new System.Object[]{message}, "PROCEDURE DESCRIPTION");
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "PROCEDURE DATE/TIME");
       this.add(typeof(ID), true, 1, 2, new System.Object[]{message, 90}, "PROCEDURE TYPE");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "PROCEDURE MINUTES");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "ANESTHESIOLOGIST");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 19}, "ANESTHESIA CODE");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "ANESTHESIA MINUTES");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "SURGEON");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "RESIDENT CODE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 59}, "CONSENT CODE");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns a single repetition of SET ID - PROCEDURE(PR1-1).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public SI GetSETIDPROCEDURE(int rep)
	{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, rep);
				ret = (SI)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of SET ID - PROCEDURE (PR1-1).
   ///</summary>
  public SI[] GetSETIDPROCEDURE() {
     SI[] ret = null;
    try {
        IType[] t = this.GetField(1);  
        ret = new SI[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (SI)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of SET ID - PROCEDURE (PR1-1).
   ///</summary>
  public int SETIDPROCEDURERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(1);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PROCEDURE CODING METHOD.(PR1-2).
	///</summary>
	public ID PROCEDURECODINGMETHOD
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCEDURE CODE(PR1-3).
	///</summary>
	public ID PROCEDURECODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCEDURE DESCRIPTION(PR1-4).
	///</summary>
	public ST PROCEDUREDESCRIPTION
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCEDURE DATE/TIME(PR1-5).
	///</summary>
	public TS PROCEDUREDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCEDURE TYPE(PR1-6).
	///</summary>
	public ID PROCEDURETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PROCEDURE MINUTES(PR1-7).
	///</summary>
	public NM PROCEDUREMINUTES
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ANESTHESIOLOGIST(PR1-8).
	///</summary>
	public CN ANESTHESIOLOGIST
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ANESTHESIA CODE(PR1-9).
	///</summary>
	public ID ANESTHESIACODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ANESTHESIA MINUTES(PR1-10).
	///</summary>
	public NM ANESTHESIAMINUTES
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SURGEON(PR1-11).
	///</summary>
	public CN SURGEON
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RESIDENT CODE(PR1-12).
	///</summary>
	public CN RESIDENTCODE
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CONSENT CODE(PR1-13).
	///</summary>
	public ID CONSENTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\PV1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 PV1 message segment. 
/// This segment has the following fields:<ol>
///<li>PV1-1: SET ID - PATIENT VISIT (SI)</li>
///<li>PV1-2: PATIENT CLASS (ID)</li>
///<li>PV1-3: ASSIGNED PATIENT LOCATION (ID)</li>
///<li>PV1-4: ADMISSION TYPE (ID)</li>
///<li>PV1-5: PRE-ADMIT NUMBER (ST)</li>
///<li>PV1-6: PRIOR PATIENT LOCATION (ID)</li>
///<li>PV1-7: ATTENDING DOCTOR (CN)</li>
///<li>PV1-8: REFERRING DOCTOR (CN)</li>
///<li>PV1-9: CONSULTING DOCTOR (CN)</li>
///<li>PV1-10: HOSPITAL SERVICE (ID)</li>
///<li>PV1-11: TEMPORARY LOCATION (ID)</li>
///<li>PV1-12: PRE-ADMIT TEST INDICATOR (ID)</li>
///<li>PV1-13: RE-ADMISSION INDICATOR (ID)</li>
///<li>PV1-14: ADMIT SOURCE (ID)</li>
///<li>PV1-15: AMBULATORY STATUS (ID)</li>
///<li>PV1-16: VIP INDICATOR (ID)</li>
///<li>PV1-17: ADMITTING DOCTOR (CN)</li>
///<li>PV1-18: PATIENT TYPE (ID)</li>
///<li>PV1-19: VISIT NUMBER (NM)</li>
///<li>PV1-20: FINANCIAL CLASS (ID)</li>
///<li>PV1-21: CHARGE PRICE INDICATOR (ID)</li>
///<li>PV1-22: COURTESY CODE (ID)</li>
///<li>PV1-23: CREDIT RATING (ID)</li>
///<li>PV1-24: CONTRACT CODE (ID)</li>
///<li>PV1-25: CONTRACT EFFECTIVE DATE (DT)</li>
///<li>PV1-26: CONTRACT AMOUNT (NM)</li>
///<li>PV1-27: CONTRACT PERIOD (NM)</li>
///<li>PV1-28: INTEREST CODE (ID)</li>
///<li>PV1-29: TRANSFER TO BAD DEBT CODE (ID)</li>
///<li>PV1-30: TRANSFER TO BAD DEBT DATE (DT)</li>
///<li>PV1-31: BAD DEBT AGENCY CODE (ST)</li>
///<li>PV1-32: BAD DEBT TRANSFER AMOUNT (NM)</li>
///<li>PV1-33: BAD DEBT RECOVERY AMOUNT (NM)</li>
///<li>PV1-34: DELETE ACCOUNT INDICATOR (ID)</li>
///<li>PV1-35: DELETE ACCOUNT DATE (DT)</li>
///<li>PV1-36: DISCHARGE DISPOSITION (ID)</li>
///<li>PV1-37: DISCHARGED TO LOCATION (ID)</li>
///<li>PV1-38: DIET TYPE (ID)</li>
///<li>PV1-39: SERVICING FACILITY (ID)</li>
///<li>PV1-40: BED STATUS (ID)</li>
///<li>PV1-41: ACCOUNT STATUS (ID)</li>
///<li>PV1-42: PENDING LOCATION (ID)</li>
///<li>PV1-43: PRIOR TEMPORARY LOCATION (ID)</li>
///<li>PV1-44: ADMIT DATE/TIME (TS)</li>
///<li>PV1-45: DISCHARGE DATE/TIME (TS)</li>
///<li>PV1-46: CURRENT PATIENT BALANCE (NM)</li>
///<li>PV1-47: TOTAL CHARGES (NM)</li>
///<li>PV1-48: TOTAL ADJUSTMENTS (NM)</li>
///<li>PV1-49: TOTAL PAYMENTS (NM)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class PV1 : AbstractSegment  {

  /**
   * Creates a PV1 (PATIENT VISIT) segment object that belongs to the given 
   * message.  
   */
	public PV1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - PATIENT VISIT");
       this.add(typeof(ID), true, 1, 1, new System.Object[]{message, 4}, "PATIENT CLASS");
       this.add(typeof(ID), true, 1, 12, new System.Object[]{message, 79}, "ASSIGNED PATIENT LOCATION");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 7}, "ADMISSION TYPE");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "PRE-ADMIT NUMBER");
       this.add(typeof(ID), false, 1, 12, new System.Object[]{message, 79}, "PRIOR PATIENT LOCATION");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "ATTENDING DOCTOR");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "REFERRING DOCTOR");
       this.add(typeof(CN), false, 0, 60, new System.Object[]{message}, "CONSULTING DOCTOR");
       this.add(typeof(ID), false, 1, 3, new System.Object[]{message, 69}, "HOSPITAL SERVICE");
       this.add(typeof(ID), false, 1, 12, new System.Object[]{message, 79}, "TEMPORARY LOCATION");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 87}, "PRE-ADMIT TEST INDICATOR");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 92}, "RE-ADMISSION INDICATOR");
       this.add(typeof(ID), false, 1, 3, new System.Object[]{message, 23}, "ADMIT SOURCE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 9}, "AMBULATORY STATUS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 99}, "VIP INDICATOR");
       this.add(typeof(CN), false, 1, 60, new System.Object[]{message}, "ADMITTING DOCTOR");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 18}, "PATIENT TYPE");
       this.add(typeof(NM), false, 1, 4, new System.Object[]{message}, "VISIT NUMBER");
       this.add(typeof(ID), false, 4, 11, new System.Object[]{message, 64}, "FINANCIAL CLASS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 32}, "CHARGE PRICE INDICATOR");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 45}, "COURTESY CODE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 46}, "CREDIT RATING");
       this.add(typeof(ID), false, 0, 2, new System.Object[]{message, 44}, "CONTRACT CODE");
       this.add(typeof(DT), false, 0, 8, new System.Object[]{message}, "CONTRACT EFFECTIVE DATE");
       this.add(typeof(NM), false, 0, 12, new System.Object[]{message}, "CONTRACT AMOUNT");
       this.add(typeof(NM), false, 0, 3, new System.Object[]{message}, "CONTRACT PERIOD");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 73}, "INTEREST CODE");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 110}, "TRANSFER TO BAD DEBT CODE");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "TRANSFER TO BAD DEBT DATE");
       this.add(typeof(ST), false, 1, 10, new System.Object[]{message}, "BAD DEBT AGENCY CODE");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "BAD DEBT TRANSFER AMOUNT");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "BAD DEBT RECOVERY AMOUNT");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 111}, "DELETE ACCOUNT INDICATOR");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "DELETE ACCOUNT DATE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 112}, "DISCHARGE DISPOSITION");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 113}, "DISCHARGED TO LOCATION");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 114}, "DIET TYPE");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 115}, "SERVICING FACILITY");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 116}, "BED STATUS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 117}, "ACCOUNT STATUS");
       this.add(typeof(ID), false, 1, 12, new System.Object[]{message, 79}, "PENDING LOCATION");
       this.add(typeof(ID), false, 1, 12, new System.Object[]{message, 79}, "PRIOR TEMPORARY LOCATION");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "ADMIT DATE/TIME");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DISCHARGE DATE/TIME");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "CURRENT PATIENT BALANCE");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "TOTAL CHARGES");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "TOTAL ADJUSTMENTS");
       this.add(typeof(NM), false, 1, 12, new System.Object[]{message}, "TOTAL PAYMENTS");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - PATIENT VISIT(PV1-1).
	///</summary>
	public SI SETIDPATIENTVISIT
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT CLASS(PV1-2).
	///</summary>
	public ID PATIENTCLASS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ASSIGNED PATIENT LOCATION(PV1-3).
	///</summary>
	public ID ASSIGNEDPATIENTLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ADMISSION TYPE(PV1-4).
	///</summary>
	public ID ADMISSIONTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRE-ADMIT NUMBER(PV1-5).
	///</summary>
	public ST PREADMITNUMBER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRIOR PATIENT LOCATION(PV1-6).
	///</summary>
	public ID PRIORPATIENTLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ATTENDING DOCTOR(PV1-7).
	///</summary>
	public CN ATTENDINGDOCTOR
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REFERRING DOCTOR(PV1-8).
	///</summary>
	public CN REFERRINGDOCTOR
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of CONSULTING DOCTOR(PV1-9).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CN GetCONSULTINGDOCTOR(int rep)
	{
			CN ret = null;
			try
			{
			IType t = this.GetField(9, rep);
				ret = (CN)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONSULTING DOCTOR (PV1-9).
   ///</summary>
  public CN[] GetCONSULTINGDOCTOR() {
     CN[] ret = null;
    try {
        IType[] t = this.GetField(9);  
        ret = new CN[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CN)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONSULTING DOCTOR (PV1-9).
   ///</summary>
  public int CONSULTINGDOCTORRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(9);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns HOSPITAL SERVICE(PV1-10).
	///</summary>
	public ID HOSPITALSERVICE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TEMPORARY LOCATION(PV1-11).
	///</summary>
	public ID TEMPORARYLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRE-ADMIT TEST INDICATOR(PV1-12).
	///</summary>
	public ID PREADMITTESTINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RE-ADMISSION INDICATOR(PV1-13).
	///</summary>
	public ID READMISSIONINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ADMIT SOURCE(PV1-14).
	///</summary>
	public ID ADMITSOURCE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns AMBULATORY STATUS(PV1-15).
	///</summary>
	public ID AMBULATORYSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VIP INDICATOR(PV1-16).
	///</summary>
	public ID VIPINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ADMITTING DOCTOR(PV1-17).
	///</summary>
	public CN ADMITTINGDOCTOR
	{
		get{
			CN ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (CN)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PATIENT TYPE(PV1-18).
	///</summary>
	public ID PATIENTTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns VISIT NUMBER(PV1-19).
	///</summary>
	public NM VISITNUMBER
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of FINANCIAL CLASS(PV1-20).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetFINANCIALCLASS(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(20, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of FINANCIAL CLASS (PV1-20).
   ///</summary>
  public ID[] GetFINANCIALCLASS() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(20);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of FINANCIAL CLASS (PV1-20).
   ///</summary>
  public int FINANCIALCLASSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(20);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns CHARGE PRICE INDICATOR(PV1-21).
	///</summary>
	public ID CHARGEPRICEINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns COURTESY CODE(PV1-22).
	///</summary>
	public ID COURTESYCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CREDIT RATING(PV1-23).
	///</summary>
	public ID CREDITRATING
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(23, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of CONTRACT CODE(PV1-24).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetCONTRACTCODE(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(24, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONTRACT CODE (PV1-24).
   ///</summary>
  public ID[] GetCONTRACTCODE() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(24);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONTRACT CODE (PV1-24).
   ///</summary>
  public int CONTRACTCODERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(24);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of CONTRACT EFFECTIVE DATE(PV1-25).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public DT GetCONTRACTEFFECTIVEDATE(int rep)
	{
			DT ret = null;
			try
			{
			IType t = this.GetField(25, rep);
				ret = (DT)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONTRACT EFFECTIVE DATE (PV1-25).
   ///</summary>
  public DT[] GetCONTRACTEFFECTIVEDATE() {
     DT[] ret = null;
    try {
        IType[] t = this.GetField(25);  
        ret = new DT[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (DT)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONTRACT EFFECTIVE DATE (PV1-25).
   ///</summary>
  public int CONTRACTEFFECTIVEDATERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(25);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of CONTRACT AMOUNT(PV1-26).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public NM GetCONTRACTAMOUNT(int rep)
	{
			NM ret = null;
			try
			{
			IType t = this.GetField(26, rep);
				ret = (NM)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONTRACT AMOUNT (PV1-26).
   ///</summary>
  public NM[] GetCONTRACTAMOUNT() {
     NM[] ret = null;
    try {
        IType[] t = this.GetField(26);  
        ret = new NM[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (NM)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONTRACT AMOUNT (PV1-26).
   ///</summary>
  public int CONTRACTAMOUNTRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(26);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of CONTRACT PERIOD(PV1-27).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public NM GetCONTRACTPERIOD(int rep)
	{
			NM ret = null;
			try
			{
			IType t = this.GetField(27, rep);
				ret = (NM)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONTRACT PERIOD (PV1-27).
   ///</summary>
  public NM[] GetCONTRACTPERIOD() {
     NM[] ret = null;
    try {
        IType[] t = this.GetField(27);  
        ret = new NM[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (NM)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONTRACT PERIOD (PV1-27).
   ///</summary>
  public int CONTRACTPERIODRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(27);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns INTEREST CODE(PV1-28).
	///</summary>
	public ID INTERESTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(28, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSFER TO BAD DEBT CODE(PV1-29).
	///</summary>
	public ID TRANSFERTOBADDEBTCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(29, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TRANSFER TO BAD DEBT DATE(PV1-30).
	///</summary>
	public DT TRANSFERTOBADDEBTDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(30, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BAD DEBT AGENCY CODE(PV1-31).
	///</summary>
	public ST BADDEBTAGENCYCODE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(31, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BAD DEBT TRANSFER AMOUNT(PV1-32).
	///</summary>
	public NM BADDEBTTRANSFERAMOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(32, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BAD DEBT RECOVERY AMOUNT(PV1-33).
	///</summary>
	public NM BADDEBTRECOVERYAMOUNT
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(33, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DELETE ACCOUNT INDICATOR(PV1-34).
	///</summary>
	public ID DELETEACCOUNTINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(34, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DELETE ACCOUNT DATE(PV1-35).
	///</summary>
	public DT DELETEACCOUNTDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(35, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DISCHARGE DISPOSITION(PV1-36).
	///</summary>
	public ID DISCHARGEDISPOSITION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(36, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DISCHARGED TO LOCATION(PV1-37).
	///</summary>
	public ID DISCHARGEDTOLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(37, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DIET TYPE(PV1-38).
	///</summary>
	public ID DIETTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(38, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SERVICING FACILITY(PV1-39).
	///</summary>
	public ID SERVICINGFACILITY
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(39, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BED STATUS(PV1-40).
	///</summary>
	public ID BEDSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(40, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ACCOUNT STATUS(PV1-41).
	///</summary>
	public ID ACCOUNTSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(41, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PENDING LOCATION(PV1-42).
	///</summary>
	public ID PENDINGLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(42, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRIOR TEMPORARY LOCATION(PV1-43).
	///</summary>
	public ID PRIORTEMPORARYLOCATION
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(43, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ADMIT DATE/TIME(PV1-44).
	///</summary>
	public TS ADMITDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(44, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DISCHARGE DATE/TIME(PV1-45).
	///</summary>
	public TS DISCHARGEDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(45, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CURRENT PATIENT BALANCE(PV1-46).
	///</summary>
	public NM CURRENTPATIENTBALANCE
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(46, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TOTAL CHARGES(PV1-47).
	///</summary>
	public NM TOTALCHARGES
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(47, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TOTAL ADJUSTMENTS(PV1-48).
	///</summary>
	public NM TOTALADJUSTMENTS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(48, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns TOTAL PAYMENTS(PV1-49).
	///</summary>
	public NM TOTALPAYMENTS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(49, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\QRD.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 QRD message segment. 
/// This segment has the following fields:<ol>
///<li>QRD-1: QUERY DATE/TIME (TS)</li>
///<li>QRD-2: QUERY FORMAT CODE (ID)</li>
///<li>QRD-3: QUERY PRIORITY (ID)</li>
///<li>QRD-4: QUERY ID (ST)</li>
///<li>QRD-5: DEFERRED RESPONSE TYPE (ID)</li>
///<li>QRD-6: DEFERRED RESPONSE DATE/TIME (TS)</li>
///<li>QRD-7: QUANTITY LIMITED REQUEST (CQ)</li>
///<li>QRD-8: WHO SUBJECT FILTER (ST)</li>
///<li>QRD-9: WHAT SUBJECT FILTER (ID)</li>
///<li>QRD-10: WHAT DEPARTMENT DATA CODE (ST)</li>
///<li>QRD-11: WHAT DATA CODE VALUE QUAL. (ST)</li>
///<li>QRD-12: QUERY RESULTS LEVEL (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class QRD : AbstractSegment  {

  /**
   * Creates a QRD (QUERY DEFINITION) segment object that belongs to the given 
   * message.  
   */
	public QRD(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(TS), true, 1, 19, new System.Object[]{message}, "QUERY DATE/TIME");
       this.add(typeof(ID), true, 1, 1, new System.Object[]{message, 106}, "QUERY FORMAT CODE");
       this.add(typeof(ID), true, 1, 1, new System.Object[]{message, 91}, "QUERY PRIORITY");
       this.add(typeof(ST), true, 1, 10, new System.Object[]{message}, "QUERY ID");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 107}, "DEFERRED RESPONSE TYPE");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "DEFERRED RESPONSE DATE/TIME");
       this.add(typeof(CQ), true, 1, 5, new System.Object[]{message}, "QUANTITY LIMITED REQUEST");
       this.add(typeof(ST), true, 0, 20, new System.Object[]{message}, "WHO SUBJECT FILTER");
       this.add(typeof(ID), true, 0, 3, new System.Object[]{message, 48}, "WHAT SUBJECT FILTER");
       this.add(typeof(ST), true, 0, 20, new System.Object[]{message}, "WHAT DEPARTMENT DATA CODE");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "WHAT DATA CODE VALUE QUAL.");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 108}, "QUERY RESULTS LEVEL");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns QUERY DATE/TIME(QRD-1).
	///</summary>
	public TS QUERYDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns QUERY FORMAT CODE(QRD-2).
	///</summary>
	public ID QUERYFORMATCODE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns QUERY PRIORITY(QRD-3).
	///</summary>
	public ID QUERYPRIORITY
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns QUERY ID(QRD-4).
	///</summary>
	public ST QUERYID
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DEFERRED RESPONSE TYPE(QRD-5).
	///</summary>
	public ID DEFERREDRESPONSETYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DEFERRED RESPONSE DATE/TIME(QRD-6).
	///</summary>
	public TS DEFERREDRESPONSEDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns QUANTITY LIMITED REQUEST(QRD-7).
	///</summary>
	public CQ QUANTITYLIMITEDREQUEST
	{
		get{
			CQ ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (CQ)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of WHO SUBJECT FILTER(QRD-8).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetWHOSUBJECTFILTER(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHO SUBJECT FILTER (QRD-8).
   ///</summary>
  public ST[] GetWHOSUBJECTFILTER() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(8);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHO SUBJECT FILTER (QRD-8).
   ///</summary>
  public int WHOSUBJECTFILTERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(8);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of WHAT SUBJECT FILTER(QRD-9).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetWHATSUBJECTFILTER(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(9, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHAT SUBJECT FILTER (QRD-9).
   ///</summary>
  public ID[] GetWHATSUBJECTFILTER() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(9);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHAT SUBJECT FILTER (QRD-9).
   ///</summary>
  public int WHATSUBJECTFILTERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(9);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of WHAT DEPARTMENT DATA CODE(QRD-10).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetWHATDEPARTMENTDATACODE(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(10, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHAT DEPARTMENT DATA CODE (QRD-10).
   ///</summary>
  public ST[] GetWHATDEPARTMENTDATACODE() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(10);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHAT DEPARTMENT DATA CODE (QRD-10).
   ///</summary>
  public int WHATDEPARTMENTDATACODERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(10);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of WHAT DATA CODE VALUE QUAL.(QRD-11).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetWHATDATACODEVALUEQUAL(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHAT DATA CODE VALUE QUAL. (QRD-11).
   ///</summary>
  public ST[] GetWHATDATACODEVALUEQUAL() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(11);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHAT DATA CODE VALUE QUAL. (QRD-11).
   ///</summary>
  public int WHATDATACODEVALUEQUALRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(11);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns QUERY RESULTS LEVEL(QRD-12).
	///</summary>
	public ID QUERYRESULTSLEVEL
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\QRF.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 QRF message segment. 
/// This segment has the following fields:<ol>
///<li>QRF-1: WHERE SUBJECT FILTER (ST)</li>
///<li>QRF-2: WHEN DATA START DATE/TIME (TS)</li>
///<li>QRF-3: WHEN DATA END DATE/TIME (TS)</li>
///<li>QRF-4: WHAT USER QUALIFIER (ST)</li>
///<li>QRF-5: OTHER QRY SUBJECT FILTER (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class QRF : AbstractSegment  {

  /**
   * Creates a QRF (QUERY FILTER) segment object that belongs to the given 
   * message.  
   */
	public QRF(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 0, 20, new System.Object[]{message}, "WHERE SUBJECT FILTER");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "WHEN DATA START DATE/TIME");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "WHEN DATA END DATE/TIME");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "WHAT USER QUALIFIER");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "OTHER QRY SUBJECT FILTER");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns a single repetition of WHERE SUBJECT FILTER(QRF-1).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetWHERESUBJECTFILTER(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHERE SUBJECT FILTER (QRF-1).
   ///</summary>
  public ST[] GetWHERESUBJECTFILTER() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(1);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHERE SUBJECT FILTER (QRF-1).
   ///</summary>
  public int WHERESUBJECTFILTERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(1);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns WHEN DATA START DATE/TIME(QRF-2).
	///</summary>
	public TS WHENDATASTARTDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns WHEN DATA END DATE/TIME(QRF-3).
	///</summary>
	public TS WHENDATAENDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of WHAT USER QUALIFIER(QRF-4).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetWHATUSERQUALIFIER(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of WHAT USER QUALIFIER (QRF-4).
   ///</summary>
  public ST[] GetWHATUSERQUALIFIER() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(4);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of WHAT USER QUALIFIER (QRF-4).
   ///</summary>
  public int WHATUSERQUALIFIERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(4);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of OTHER QRY SUBJECT FILTER(QRF-5).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetOTHERQRYSUBJECTFILTER(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of OTHER QRY SUBJECT FILTER (QRF-5).
   ///</summary>
  public ST[] GetOTHERQRYSUBJECTFILTER() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(5);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of OTHER QRY SUBJECT FILTER (QRF-5).
   ///</summary>
  public int OTHERQRYSUBJECTFILTERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(5);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\RX1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 RX1 message segment. 
/// This segment has the following fields:<ol>
///<li>RX1-1: UNUSED (ST)</li>
///<li>RX1-2: UNUSED (ST)</li>
///<li>RX1-3: ROUTE (ST)</li>
///<li>RX1-4: SITE ADMINISTERED (ST)</li>
///<li>RX1-5: IV SOLUTION RATE (CQ)</li>
///<li>RX1-6: DRUG STRENGTH (CQ)</li>
///<li>RX1-7: FINAL CONCENTRATION (NM)</li>
///<li>RX1-8: FINAL VOLUME IN ML. (NM)</li>
///<li>RX1-9: DRUG DOSE (CM)</li>
///<li>RX1-10: DRUG ROLE (ID)</li>
///<li>RX1-11: PRESCRIPTION SEQUENCE # (NM)</li>
///<li>RX1-12: QUANTITY DISPENSED (CQ)</li>
///<li>RX1-13: UNUSED (ST)</li>
///<li>RX1-14: DRUG ID (CE)</li>
///<li>RX1-15: COMPONENT DRUG IDS (ID)</li>
///<li>RX1-16: PRESCRIPTION TYPE (ID)</li>
///<li>RX1-17: SUBSTITUTION STATUS (ID)</li>
///<li>RX1-18: RX ORDER STATUS (ID)</li>
///<li>RX1-19: NUMBER OF REFILLS (NM)</li>
///<li>RX1-20: UNUSED (ST)</li>
///<li>RX1-21: REFILLS REMAINING (NM)</li>
///<li>RX1-22: DEA CLASS (ID)</li>
///<li>RX1-23: ORDERING MD'S DEA NUMBER (NM)</li>
///<li>RX1-24: UNUSED (ST)</li>
///<li>RX1-25: LAST REFILL DATE/TIME (TS)</li>
///<li>RX1-26: RX NUMBER (ST)</li>
///<li>RX1-27: PRN STATUS (ID)</li>
///<li>RX1-28: PHARMACY INSTRUCTIONS (TX)</li>
///<li>RX1-29: PATIENT INSTRUCTIONS (TX)</li>
///<li>RX1-30: INSTRUCTIONS (SIG) (TX)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class RX1 : AbstractSegment  {

  /**
   * Creates a RX1 (PHARMACY ORDER) segment object that belongs to the given 
   * message.  
   */
	public RX1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), false, 1, 0, new System.Object[]{message}, "UNUSED");
       this.add(typeof(ST), false, 1, 0, new System.Object[]{message}, "UNUSED");
       this.add(typeof(ST), false, 1, 8, new System.Object[]{message}, "ROUTE");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "SITE ADMINISTERED");
       this.add(typeof(CQ), false, 1, 10, new System.Object[]{message}, "IV SOLUTION RATE");
       this.add(typeof(CQ), false, 1, 14, new System.Object[]{message}, "DRUG STRENGTH");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "FINAL CONCENTRATION");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "FINAL VOLUME IN ML.");
       this.add(typeof(CM), false, 1, 10, new System.Object[]{message}, "DRUG DOSE");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 0}, "DRUG ROLE");
       this.add(typeof(NM), false, 1, 3, new System.Object[]{message}, "PRESCRIPTION SEQUENCE #");
       this.add(typeof(CQ), false, 1, 4, new System.Object[]{message}, "QUANTITY DISPENSED");
       this.add(typeof(ST), false, 1, 0, new System.Object[]{message}, "UNUSED");
       this.add(typeof(CE), false, 1, 5, new System.Object[]{message}, "DRUG ID");
       this.add(typeof(ID), false, 5, 5, new System.Object[]{message, 0}, "COMPONENT DRUG IDS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "PRESCRIPTION TYPE");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 0}, "SUBSTITUTION STATUS");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 38}, "RX ORDER STATUS");
       this.add(typeof(NM), false, 1, 3, new System.Object[]{message}, "NUMBER OF REFILLS");
       this.add(typeof(ST), false, 1, 0, new System.Object[]{message}, "UNUSED");
       this.add(typeof(NM), false, 1, 3, new System.Object[]{message}, "REFILLS REMAINING");
       this.add(typeof(ID), false, 1, 5, new System.Object[]{message, 0}, "DEA CLASS");
       this.add(typeof(NM), false, 1, 10, new System.Object[]{message}, "ORDERING MD'S DEA NUMBER");
       this.add(typeof(ST), false, 1, 0, new System.Object[]{message}, "UNUSED");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "LAST REFILL DATE/TIME");
       this.add(typeof(ST), false, 1, 20, new System.Object[]{message}, "RX NUMBER");
       this.add(typeof(ID), false, 1, 5, new System.Object[]{message, 0}, "PRN STATUS");
       this.add(typeof(TX), false, 5, 80, new System.Object[]{message}, "PHARMACY INSTRUCTIONS");
       this.add(typeof(TX), false, 5, 80, new System.Object[]{message}, "PATIENT INSTRUCTIONS");
       this.add(typeof(TX), false, 0, 500, new System.Object[]{message}, "INSTRUCTIONS (SIG)");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns ROUTE(RX1-3).
	///</summary>
	public ST ROUTE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SITE ADMINISTERED(RX1-4).
	///</summary>
	public ST SITEADMINISTERED
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns IV SOLUTION RATE(RX1-5).
	///</summary>
	public CQ IVSOLUTIONRATE
	{
		get{
			CQ ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (CQ)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRUG STRENGTH(RX1-6).
	///</summary>
	public CQ DRUGSTRENGTH
	{
		get{
			CQ ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (CQ)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FINAL CONCENTRATION(RX1-7).
	///</summary>
	public NM FINALCONCENTRATION
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns FINAL VOLUME IN ML.(RX1-8).
	///</summary>
	public NM FINALVOLUMEINML
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRUG DOSE(RX1-9).
	///</summary>
	public CM DRUGDOSE
	{
		get{
			CM ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (CM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRUG ROLE(RX1-10).
	///</summary>
	public ID DRUGROLE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(10, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRESCRIPTION SEQUENCE #(RX1-11).
	///</summary>
	public NM PRESCRIPTIONSEQUENCE
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns QUANTITY DISPENSED(RX1-12).
	///</summary>
	public CQ QUANTITYDISPENSED
	{
		get{
			CQ ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (CQ)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DRUG ID(RX1-14).
	///</summary>
	public CE DRUGID
	{
		get{
			CE ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (CE)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of COMPONENT DRUG IDS(RX1-15).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetCOMPONENTDRUGIDS(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(15, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of COMPONENT DRUG IDS (RX1-15).
   ///</summary>
  public ID[] GetCOMPONENTDRUGIDS() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(15);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of COMPONENT DRUG IDS (RX1-15).
   ///</summary>
  public int COMPONENTDRUGIDSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(15);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns PRESCRIPTION TYPE(RX1-16).
	///</summary>
	public ID PRESCRIPTIONTYPE
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(16, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SUBSTITUTION STATUS(RX1-17).
	///</summary>
	public ID SUBSTITUTIONSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RX ORDER STATUS(RX1-18).
	///</summary>
	public ID RXORDERSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NUMBER OF REFILLS(RX1-19).
	///</summary>
	public NM NUMBEROFREFILLS
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REFILLS REMAINING(RX1-21).
	///</summary>
	public NM REFILLSREMAINING
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns DEA CLASS(RX1-22).
	///</summary>
	public ID DEACLASS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns ORDERING MD'S DEA NUMBER(RX1-23).
	///</summary>
	public NM ORDERINGMDSDEANUMBER
	{
		get{
			NM ret = null;
			try
			{
			IType t = this.GetField(23, 0);
				ret = (NM)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns LAST REFILL DATE/TIME(RX1-25).
	///</summary>
	public TS LASTREFILLDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(25, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns RX NUMBER(RX1-26).
	///</summary>
	public ST RXNUMBER
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(26, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PRN STATUS(RX1-27).
	///</summary>
	public ID PRNSTATUS
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(27, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of PHARMACY INSTRUCTIONS(RX1-28).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TX GetPHARMACYINSTRUCTIONS(int rep)
	{
			TX ret = null;
			try
			{
			IType t = this.GetField(28, rep);
				ret = (TX)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of PHARMACY INSTRUCTIONS (RX1-28).
   ///</summary>
  public TX[] GetPHARMACYINSTRUCTIONS() {
     TX[] ret = null;
    try {
        IType[] t = this.GetField(28);  
        ret = new TX[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TX)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of PHARMACY INSTRUCTIONS (RX1-28).
   ///</summary>
  public int PHARMACYINSTRUCTIONSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(28);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of PATIENT INSTRUCTIONS(RX1-29).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TX GetPATIENTINSTRUCTIONS(int rep)
	{
			TX ret = null;
			try
			{
			IType t = this.GetField(29, rep);
				ret = (TX)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of PATIENT INSTRUCTIONS (RX1-29).
   ///</summary>
  public TX[] GetPATIENTINSTRUCTIONS() {
     TX[] ret = null;
    try {
        IType[] t = this.GetField(29);  
        ret = new TX[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TX)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of PATIENT INSTRUCTIONS (RX1-29).
   ///</summary>
  public int PATIENTINSTRUCTIONSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(29);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of INSTRUCTIONS (SIG)(RX1-30).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public TX GetINSTRUCTIONS(int rep)
	{
			TX ret = null;
			try
			{
			IType t = this.GetField(30, rep);
				ret = (TX)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of INSTRUCTIONS (SIG) (RX1-30).
   ///</summary>
  public TX[] GetINSTRUCTIONS() {
     TX[] ret = null;
    try {
        IType[] t = this.GetField(30);  
        ret = new TX[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (TX)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of INSTRUCTIONS (SIG) (RX1-30).
   ///</summary>
  public int INSTRUCTIONSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(30);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}},
  basepath\\NHapi.Model.V21\\Segment\\UB1.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 UB1 message segment. 
/// This segment has the following fields:<ol>
///<li>UB1-1: SET ID - UB82 (SI)</li>
///<li>UB1-2: BLOOD DEDUCTIBLE (ST)</li>
///<li>UB1-3: BLOOD FURN.-PINTS OF (40) (ST)</li>
///<li>UB1-4: BLOOD REPLACED-PINTS (41) (ST)</li>
///<li>UB1-5: BLOOD NOT RPLCD-PINTS(42) (ST)</li>
///<li>UB1-6: CO-INSURANCE DAYS (25) (ST)</li>
///<li>UB1-7: CONDITION CODE (ID)</li>
///<li>UB1-8: COVERED DAYS - (23) (ST)</li>
///<li>UB1-9: NON COVERED DAYS - (24) (ST)</li>
///<li>UB1-10: VALUE AMOUNT and CODE (CM)</li>
///<li>UB1-11: NUMBER OF GRACE DAYS (90) (ST)</li>
///<li>UB1-12: SPEC. PROG. INDICATOR(44) (ID)</li>
///<li>UB1-13: PSRO/UR APPROVAL IND. (87) (ID)</li>
///<li>UB1-14: PSRO/UR APRVD STAY-FM(88) (DT)</li>
///<li>UB1-15: PSRO/UR APRVD STAY-TO(89) (DT)</li>
///<li>UB1-16: OCCURRENCE (28-32) (ID)</li>
///<li>UB1-17: OCCURRENCE SPAN (33) (ID)</li>
///<li>UB1-18: OCCURRENCE SPAN START DATE(33) (DT)</li>
///<li>UB1-19: OCCUR. SPAN END DATE (33) (DT)</li>
///<li>UB1-20: UB-82 LOCATOR 2 (ST)</li>
///<li>UB1-21: UB-82 LOCATOR 9 (ST)</li>
///<li>UB1-22: UB-82 LOCATOR 27 (ST)</li>
///<li>UB1-23: UB-82 LOCATOR 45 (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class UB1 : AbstractSegment  {

  /**
   * Creates a UB1 (UB82 DATA) segment object that belongs to the given 
   * message.  
   */
	public UB1(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(SI), false, 1, 4, new System.Object[]{message}, "SET ID - UB82");
       this.add(typeof(ST), false, 1, 1, new System.Object[]{message}, "BLOOD DEDUCTIBLE");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "BLOOD FURN.-PINTS OF (40)");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "BLOOD REPLACED-PINTS (41)");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "BLOOD NOT RPLCD-PINTS(42)");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "CO-INSURANCE DAYS (25)");
       this.add(typeof(ID), false, 5, 2, new System.Object[]{message, 43}, "CONDITION CODE");
       this.add(typeof(ST), false, 1, 3, new System.Object[]{message}, "COVERED DAYS - (23)");
       this.add(typeof(ST), false, 1, 3, new System.Object[]{message}, "NON COVERED DAYS - (24)");
       this.add(typeof(CM), false, 8, 12, new System.Object[]{message}, "VALUE AMOUNT and CODE");
       this.add(typeof(ST), false, 1, 2, new System.Object[]{message}, "NUMBER OF GRACE DAYS (90)");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "SPEC. PROG. INDICATOR(44)");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 0}, "PSRO/UR APPROVAL IND. (87)");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "PSRO/UR APRVD STAY-FM(88)");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "PSRO/UR APRVD STAY-TO(89)");
       this.add(typeof(ID), false, 5, 20, new System.Object[]{message, 0}, "OCCURRENCE (28-32)");
       this.add(typeof(ID), false, 1, 2, new System.Object[]{message, 0}, "OCCURRENCE SPAN (33)");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "OCCURRENCE SPAN START DATE(33)");
       this.add(typeof(DT), false, 1, 8, new System.Object[]{message}, "OCCUR. SPAN END DATE (33)");
       this.add(typeof(ST), false, 1, 30, new System.Object[]{message}, "UB-82 LOCATOR 2");
       this.add(typeof(ST), false, 1, 7, new System.Object[]{message}, "UB-82 LOCATOR 9");
       this.add(typeof(ST), false, 1, 8, new System.Object[]{message}, "UB-82 LOCATOR 27");
       this.add(typeof(ST), false, 1, 17, new System.Object[]{message}, "UB-82 LOCATOR 45");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns SET ID - UB82(UB1-1).
	///</summary>
	public SI SETIDUB82
	{
		get{
			SI ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (SI)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BLOOD DEDUCTIBLE(UB1-2).
	///</summary>
	public ST BLOODDEDUCTIBLE
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BLOOD FURN.-PINTS OF (40)(UB1-3).
	///</summary>
	public ST BLOODFURNPINTSOF
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BLOOD REPLACED-PINTS (41)(UB1-4).
	///</summary>
	public ST BLOODREPLACEDPINTS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns BLOOD NOT RPLCD-PINTS(42)(UB1-5).
	///</summary>
	public ST BLOODNOTRPLCDPINTS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns CO-INSURANCE DAYS (25)(UB1-6).
	///</summary>
	public ST COINSURANCEDAYS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of CONDITION CODE(UB1-7).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetCONDITIONCODE(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(7, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of CONDITION CODE (UB1-7).
   ///</summary>
  public ID[] GetCONDITIONCODE() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(7);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of CONDITION CODE (UB1-7).
   ///</summary>
  public int CONDITIONCODERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(7);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns COVERED DAYS - (23)(UB1-8).
	///</summary>
	public ST COVEREDDAYS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(8, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns NON COVERED DAYS - (24)(UB1-9).
	///</summary>
	public ST NONCOVEREDDAYS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(9, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of VALUE AMOUNT and CODE(UB1-10).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public CM GetVALUEAMOUNTCODE(int rep)
	{
			CM ret = null;
			try
			{
			IType t = this.GetField(10, rep);
				ret = (CM)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of VALUE AMOUNT and CODE (UB1-10).
   ///</summary>
  public CM[] GetVALUEAMOUNTCODE() {
     CM[] ret = null;
    try {
        IType[] t = this.GetField(10);  
        ret = new CM[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (CM)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of VALUE AMOUNT and CODE (UB1-10).
   ///</summary>
  public int VALUEAMOUNTCODERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(10);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns NUMBER OF GRACE DAYS (90)(UB1-11).
	///</summary>
	public ST NUMBEROFGRACEDAYS
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(11, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns SPEC. PROG. INDICATOR(44)(UB1-12).
	///</summary>
	public ID SPECPROGINDICATOR
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(12, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PSRO/UR APPROVAL IND. (87)(UB1-13).
	///</summary>
	public ID PSROURAPPROVALIND
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(13, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PSRO/UR APRVD STAY-FM(88)(UB1-14).
	///</summary>
	public DT PSROURAPRVDSTAYFM
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(14, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns PSRO/UR APRVD STAY-TO(89)(UB1-15).
	///</summary>
	public DT PSROURAPRVDSTAYTO
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(15, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of OCCURRENCE (28-32)(UB1-16).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetOCCURRENCE2832(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(16, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of OCCURRENCE (28-32) (UB1-16).
   ///</summary>
  public ID[] GetOCCURRENCE2832() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(16);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of OCCURRENCE (28-32) (UB1-16).
   ///</summary>
  public int OCCURRENCE2832RepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(16);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns OCCURRENCE SPAN (33)(UB1-17).
	///</summary>
	public ID OCCURRENCESPAN
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(17, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OCCURRENCE SPAN START DATE(33)(UB1-18).
	///</summary>
	public DT OCCURRENCESPANSTARTDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(18, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns OCCUR. SPAN END DATE (33)(UB1-19).
	///</summary>
	public DT OCCURSPANENDDATE
	{
		get{
			DT ret = null;
			try
			{
			IType t = this.GetField(19, 0);
				ret = (DT)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UB-82 LOCATOR 2(UB1-20).
	///</summary>
	public ST UB82LOCATOR2
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(20, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UB-82 LOCATOR 9(UB1-21).
	///</summary>
	public ST UB82LOCATOR9
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(21, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UB-82 LOCATOR 27(UB1-22).
	///</summary>
	public ST UB82LOCATOR27
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(22, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns UB-82 LOCATOR 45(UB1-23).
	///</summary>
	public ST UB82LOCATOR45
	{
		get{
			ST ret = null;
			try
			{
			IType t = this.GetField(23, 0);
				ret = (ST)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\URD.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 URD message segment. 
/// This segment has the following fields:<ol>
///<li>URD-1: R/U DATE/TIME (TS)</li>
///<li>URD-2: REPORT PRIORITY (ID)</li>
///<li>URD-3: R/U WHO SUBJECT DEFINITION (ST)</li>
///<li>URD-4: R/U WHAT SUBJECT DEFINITION (ID)</li>
///<li>URD-5: R/U WHAT DEPARTMENT CODE (ST)</li>
///<li>URD-6: R/U DISPLAY/PRINT LOCATIONS (ST)</li>
///<li>URD-7: R/U RESULTS LEVEL (ID)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class URD : AbstractSegment  {

  /**
   * Creates a URD (RESULTS/UPDATE DEFINITION) segment object that belongs to the given 
   * message.  
   */
	public URD(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "R/U DATE/TIME");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 109}, "REPORT PRIORITY");
       this.add(typeof(ST), true, 0, 20, new System.Object[]{message}, "R/U WHO SUBJECT DEFINITION");
       this.add(typeof(ID), false, 0, 3, new System.Object[]{message, 48}, "R/U WHAT SUBJECT DEFINITION");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "R/U WHAT DEPARTMENT CODE");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "R/U DISPLAY/PRINT LOCATIONS");
       this.add(typeof(ID), false, 1, 1, new System.Object[]{message, 108}, "R/U RESULTS LEVEL");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns R/U DATE/TIME(URD-1).
	///</summary>
	public TS RUDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(1, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns REPORT PRIORITY(URD-2).
	///</summary>
	public ID REPORTPRIORITY
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of R/U WHO SUBJECT DEFINITION(URD-3).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUWHOSUBJECTDEFINITION(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(3, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U WHO SUBJECT DEFINITION (URD-3).
   ///</summary>
  public ST[] GetRUWHOSUBJECTDEFINITION() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(3);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U WHO SUBJECT DEFINITION (URD-3).
   ///</summary>
  public int RUWHOSUBJECTDEFINITIONRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(3);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of R/U WHAT SUBJECT DEFINITION(URD-4).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ID GetRUWHATSUBJECTDEFINITION(int rep)
	{
			ID ret = null;
			try
			{
			IType t = this.GetField(4, rep);
				ret = (ID)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U WHAT SUBJECT DEFINITION (URD-4).
   ///</summary>
  public ID[] GetRUWHATSUBJECTDEFINITION() {
     ID[] ret = null;
    try {
        IType[] t = this.GetField(4);  
        ret = new ID[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ID)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U WHAT SUBJECT DEFINITION (URD-4).
   ///</summary>
  public int RUWHATSUBJECTDEFINITIONRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(4);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of R/U WHAT DEPARTMENT CODE(URD-5).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUWHATDEPARTMENTCODE(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U WHAT DEPARTMENT CODE (URD-5).
   ///</summary>
  public ST[] GetRUWHATDEPARTMENTCODE() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(5);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U WHAT DEPARTMENT CODE (URD-5).
   ///</summary>
  public int RUWHATDEPARTMENTCODERepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(5);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of R/U DISPLAY/PRINT LOCATIONS(URD-6).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUDISPLAYPRINTLOCATIONS(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(6, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U DISPLAY/PRINT LOCATIONS (URD-6).
   ///</summary>
  public ST[] GetRUDISPLAYPRINTLOCATIONS() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(6);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U DISPLAY/PRINT LOCATIONS (URD-6).
   ///</summary>
  public int RUDISPLAYPRINTLOCATIONSRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(6);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns R/U RESULTS LEVEL(URD-7).
	///</summary>
	public ID RURESULTSLEVEL
	{
		get{
			ID ret = null;
			try
			{
			IType t = this.GetField(7, 0);
				ret = (ID)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }


}},
  basepath\\NHapi.Model.V21\\Segment\\URS.cs:
using System;
using NHapi.Base;
using NHapi.Base.Parser;
using NHapi.Base.Model;
using NHapi.Model.V21.Datatype;
using NHapi.Base.Log;

namespace NHapi.Model.V21.Segment{

///<summary>
/// Represents an HL7 URS message segment. 
/// This segment has the following fields:<ol>
///<li>URS-1: R/U WHERE SUBJECT DEFINITION (ST)</li>
///<li>URS-2: R/U WHEN DATA START DATE/TIME (TS)</li>
///<li>URS-3: R/U WHEN DATA END DATE/TIME (TS)</li>
///<li>URS-4: R/U WHAT USER QUALIFIER (ST)</li>
///<li>URS-5: R/U OTHER RESULTS SUBJECT DEFINI (ST)</li>
///</ol>
/// The get...() methods return data from individual fields.  These methods 
/// do not throw exceptions and may therefore have to handle exceptions internally.  
/// If an exception is handled internally, it is logged and null is returned.  
/// This is not expected to happen - if it does happen this indicates not so much 
/// an exceptional circumstance as a bug in the code for this class.
///</summary>
[Serializable]
public class URS : AbstractSegment  {

  /**
   * Creates a URS (UNSOLICITED SELECTION) segment object that belongs to the given 
   * message.  
   */
	public URS(IGroup parent, IModelClassFactory factory) : base(parent,factory) {
	IMessage message = Message;
    try {
       this.add(typeof(ST), true, 0, 20, new System.Object[]{message}, "R/U WHERE SUBJECT DEFINITION");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "R/U WHEN DATA START DATE/TIME");
       this.add(typeof(TS), false, 1, 19, new System.Object[]{message}, "R/U WHEN DATA END DATE/TIME");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "R/U WHAT USER QUALIFIER");
       this.add(typeof(ST), false, 0, 20, new System.Object[]{message}, "R/U OTHER RESULTS SUBJECT DEFINI");
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Can't instantiate " + GetType().Name, he);
    }
  }

	///<summary>
	/// Returns a single repetition of R/U WHERE SUBJECT DEFINITION(URS-1).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUWHERESUBJECTDEFINITION(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(1, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U WHERE SUBJECT DEFINITION (URS-1).
   ///</summary>
  public ST[] GetRUWHERESUBJECTDEFINITION() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(1);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U WHERE SUBJECT DEFINITION (URS-1).
   ///</summary>
  public int RUWHERESUBJECTDEFINITIONRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(1);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns R/U WHEN DATA START DATE/TIME(URS-2).
	///</summary>
	public TS RUWHENDATASTARTDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(2, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns R/U WHEN DATA END DATE/TIME(URS-3).
	///</summary>
	public TS RUWHENDATAENDDATETIME
	{
		get{
			TS ret = null;
			try
			{
			IType t = this.GetField(3, 0);
				ret = (TS)t;
			}
			 catch (HL7Exception he) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
				throw new System.Exception("An unexpected error occurred", he);
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
	}
  }

	///<summary>
	/// Returns a single repetition of R/U WHAT USER QUALIFIER(URS-4).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUWHATUSERQUALIFIER(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(4, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U WHAT USER QUALIFIER (URS-4).
   ///</summary>
  public ST[] GetRUWHATUSERQUALIFIER() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(4);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U WHAT USER QUALIFIER (URS-4).
   ///</summary>
  public int RUWHATUSERQUALIFIERRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(4);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}
	///<summary>
	/// Returns a single repetition of R/U OTHER RESULTS SUBJECT DEFINI(URS-5).
	/// throws HL7Exception if the repetition number is invalid.
	/// <param name="rep">The repetition number (this is a repeating field)</param>
	///</summary>
	public ST GetRUOTHERRESULTSSUBJECTDEFINI(int rep)
	{
			ST ret = null;
			try
			{
			IType t = this.GetField(5, rep);
				ret = (ST)t;
		} catch (System.Exception ex) {
			HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", ex);
				throw new System.Exception("An unexpected error occurred", ex);
    }
			return ret;
  }

  ///<summary>
  /// Returns all repetitions of R/U OTHER RESULTS SUBJECT DEFINI (URS-5).
   ///</summary>
  public ST[] GetRUOTHERRESULTSSUBJECTDEFINI() {
     ST[] ret = null;
    try {
        IType[] t = this.GetField(5);  
        ret = new ST[t.Length];
        for (int i = 0; i < ret.Length; i++) {
            ret[i] = (ST)t[i];
        }
    } catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
    } catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
  }
 return ret;
}

  ///<summary>
  /// Returns the total repetitions of R/U OTHER RESULTS SUBJECT DEFINI (URS-5).
   ///</summary>
  public int RUOTHERRESULTSSUBJECTDEFINIRepetitionsUsed
{
get{
    try {
	return GetTotalFieldRepetitionsUsed(5);
    }
catch (HL7Exception he) {
        HapiLogFactory.GetHapiLog(this.GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", he);
        throw new System.Exception("An unexpected error occurred", he);
} catch (System.Exception cce) {
        HapiLogFactory.GetHapiLog(GetType()).Error("Unexpected problem obtaining field value.  This is a bug.", cce);
        throw new System.Exception("An unexpected error occurred", cce);
}
}
}

}}
}